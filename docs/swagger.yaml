definitions:
  pb.ApiResponseCard:
    properties:
      data:
        $ref: '#/definitions/pb.CardResponse'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseCardAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseCardDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseDashboardCard:
    properties:
      data:
        $ref: '#/definitions/pb.CardResponseDashboard'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseDashboardCardNumber:
    properties:
      data:
        $ref: '#/definitions/pb.CardResponseDashboardCardNumber'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseGetMe:
    properties:
      data:
        $ref: '#/definitions/pb.UserResponse'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseLogin:
    properties:
      data:
        $ref: '#/definitions/pb.TokenResponse'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseMerchant:
    properties:
      data:
        $ref: '#/definitions/pb.MerchantResponse'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseMerchantAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseMerchantDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseMerchantMonthlyAmount:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.MerchantResponseMonthlyAmount'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseMerchantMonthlyPaymentMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.MerchantResponseMonthlyPaymentMethod'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseMerchantYearlyAmount:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.MerchantResponseYearlyAmount'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseMerchantYearlyPaymentMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.MerchantResponseYearlyPaymentMethod'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseMonthSaldoBalances:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.SaldoMonthBalanceResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseMonthTotalSaldo:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.SaldoMonthTotalBalanceResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseMonthlyAmount:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.CardResponseMonthlyAmount'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseMonthlyBalance:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.CardResponseMonthlyBalance'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponsePaginationCard:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.CardResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/pb.PaginationMeta'
      status:
        type: string
    type: object
  pb.ApiResponsePaginationCardDeleteAt:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.CardResponseDeleteAt'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/pb.PaginationMeta'
      status:
        type: string
    type: object
  pb.ApiResponsePaginationMerchant:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.MerchantResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/pb.PaginationMeta'
      status:
        type: string
    type: object
  pb.ApiResponsePaginationRole:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.RoleResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/pb.PaginationMeta'
      status:
        type: string
    type: object
  pb.ApiResponsePaginationRoleDeleteAt:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.RoleResponseDeleteAt'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/pb.PaginationMeta'
      status:
        type: string
    type: object
  pb.ApiResponsePaginationSaldo:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.SaldoResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/pb.PaginationMeta'
      status:
        type: string
    type: object
  pb.ApiResponsePaginationTopup:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TopupResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/pb.PaginationMeta'
      status:
        type: string
    type: object
  pb.ApiResponsePaginationTransaction:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransactionResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/pb.PaginationMeta'
      status:
        type: string
    type: object
  pb.ApiResponsePaginationTransfer:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransferResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/pb.PaginationMeta'
      status:
        type: string
    type: object
  pb.ApiResponsePaginationUser:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.UserResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/pb.PaginationMeta'
      status:
        type: string
    type: object
  pb.ApiResponsePaginationWithdraw:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.WithdrawResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/pb.PaginationMeta'
      status:
        type: string
    type: object
  pb.ApiResponseRefreshToken:
    properties:
      data:
        $ref: '#/definitions/pb.TokenResponse'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseRegister:
    properties:
      data:
        $ref: '#/definitions/pb.UserResponse'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseRole:
    properties:
      data:
        $ref: '#/definitions/pb.RoleResponse'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseRoleAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseSaldo:
    properties:
      data:
        $ref: '#/definitions/pb.SaldoResponse'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseSaldoAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseSaldoDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTopup:
    properties:
      data:
        $ref: '#/definitions/pb.TopupResponse'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTopupAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTopupDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTopupMonthAmount:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TopupMonthAmountResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTopupMonthMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TopupMonthMethodResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTopupMonthStatusFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TopupMonthStatusFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTopupMonthStatusSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TopupMonthStatusSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTopupYearAmount:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TopupYearlyAmountResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTopupYearMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TopupYearlyMethodResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTopupYearStatusFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TopupYearStatusFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTopupYearStatusSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TopupYearStatusSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransaction:
    properties:
      data:
        $ref: '#/definitions/pb.TransactionResponse'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransactionAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransactionDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransactionMonthAmount:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransactionMonthAmountResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransactionMonthMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransactionMonthMethodResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransactionMonthStatusFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransactionMonthStatusFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransactionMonthStatusSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransactionMonthStatusSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransactionYearAmount:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransactionYearlyAmountResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransactionYearMethod:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransactionYearMethodResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransactionYearStatusFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransactionYearStatusFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransactionYearStatusSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransactionYearStatusSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransactions:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransactionResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransfer:
    properties:
      data:
        $ref: '#/definitions/pb.TransferResponse'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransferAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransferDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransferMonthAmount:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransferMonthAmountResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransferMonthStatusFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransferMonthStatusFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransferMonthStatusSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransferMonthStatusSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransferYearAmount:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransferYearAmountResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransferYearStatusFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransferYearStatusFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransferYearStatusSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransferYearStatusSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseTransfers:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TransferResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseUser:
    properties:
      data:
        $ref: '#/definitions/pb.UserResponse'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseUserAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseUserDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseWithdraw:
    properties:
      data:
        $ref: '#/definitions/pb.WithdrawResponse'
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseWithdrawAll:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseWithdrawDelete:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseWithdrawMonthAmount:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.WithdrawMonthlyAmountResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseWithdrawMonthStatusFailed:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.WithdrawMonthStatusFailedResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseWithdrawMonthStatusSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.WithdrawMonthStatusSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseWithdrawYearAmount:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.WithdrawYearlyAmountResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseWithdrawYearStatusSuccess:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.WithdrawYearStatusSuccessResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseYearSaldoBalances:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.SaldoYearBalanceResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseYearTotalSaldo:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.SaldoYearTotalBalanceResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseYearlyAmount:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.CardResponseYearlyAmount'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponseYearlyBalance:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.CardResponseYearlyBalance'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponsesMerchant:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.MerchantResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponsesSaldo:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.SaldoResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponsesTopup:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.TopupResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponsesUser:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.UserResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.ApiResponsesWithdraw:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.WithdrawResponse'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  pb.CardResponse:
    properties:
      card_number:
        type: string
      card_provider:
        type: string
      card_type:
        type: string
      created_at:
        type: string
      cvv:
        type: string
      expire_date:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  pb.CardResponseDashboard:
    properties:
      total_balance:
        type: integer
      total_topup:
        type: integer
      total_transaction:
        type: integer
      total_transfer:
        type: integer
      total_withdraw:
        type: integer
    type: object
  pb.CardResponseDashboardCardNumber:
    properties:
      total_balance:
        type: integer
      total_topup:
        type: integer
      total_transaction:
        type: integer
      total_transfer_receiver:
        type: integer
      total_transfer_send:
        type: integer
      total_withdraw:
        type: integer
    type: object
  pb.CardResponseDeleteAt:
    properties:
      card_number:
        type: string
      card_provider:
        type: string
      card_type:
        type: string
      created_at:
        type: string
      cvv:
        type: string
      deleted_at:
        type: string
      expire_date:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  pb.CardResponseMonthlyAmount:
    properties:
      month:
        type: string
      total_amount:
        type: integer
    type: object
  pb.CardResponseMonthlyBalance:
    properties:
      month:
        type: string
      total_balance:
        type: integer
    type: object
  pb.CardResponseYearlyAmount:
    properties:
      total_amount:
        type: integer
      year:
        type: string
    type: object
  pb.CardResponseYearlyBalance:
    properties:
      total_balance:
        type: integer
      year:
        type: string
    type: object
  pb.CreateRoleRequest:
    properties:
      name:
        type: string
    type: object
  pb.MerchantResponse:
    properties:
      api_key:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  pb.MerchantResponseMonthlyAmount:
    properties:
      month:
        type: string
      total_amount:
        type: integer
    type: object
  pb.MerchantResponseMonthlyPaymentMethod:
    properties:
      month:
        type: string
      payment_method:
        type: string
      total_amount:
        type: integer
    type: object
  pb.MerchantResponseYearlyAmount:
    properties:
      total_amount:
        type: integer
      year:
        type: string
    type: object
  pb.MerchantResponseYearlyPaymentMethod:
    properties:
      payment_method:
        type: string
      total_amount:
        type: integer
      year:
        type: string
    type: object
  pb.PaginationMeta:
    properties:
      current_page:
        type: integer
      page_size:
        type: integer
      total_pages:
        type: integer
      total_records:
        type: integer
    type: object
  pb.RoleResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  pb.RoleResponseDeleteAt:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  pb.SaldoMonthBalanceResponse:
    properties:
      month:
        type: string
      total_balance:
        type: integer
    type: object
  pb.SaldoMonthTotalBalanceResponse:
    properties:
      month:
        type: string
      total_balance:
        type: integer
      year:
        type: string
    type: object
  pb.SaldoResponse:
    properties:
      card_number:
        type: string
      created_at:
        type: string
      saldo_id:
        type: integer
      total_balance:
        type: integer
      updated_at:
        type: string
      withdraw_amount:
        type: integer
      withdraw_time:
        type: string
    type: object
  pb.SaldoYearBalanceResponse:
    properties:
      total_balance:
        type: integer
      year:
        type: string
    type: object
  pb.SaldoYearTotalBalanceResponse:
    properties:
      total_balance:
        type: integer
      year:
        type: string
    type: object
  pb.TokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  pb.TopupMonthAmountResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
    type: object
  pb.TopupMonthMethodResponse:
    properties:
      month:
        type: string
      topup_method:
        type: string
      total_amount:
        type: integer
      total_topups:
        type: integer
    type: object
  pb.TopupMonthStatusFailedResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  pb.TopupMonthStatusSuccessResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  pb.TopupResponse:
    properties:
      card_number:
        type: string
      created_at:
        type: string
      id:
        type: integer
      topup_amount:
        type: integer
      topup_method:
        type: string
      topup_no:
        type: string
      topup_time:
        type: string
      updated_at:
        type: string
    type: object
  pb.TopupYearStatusFailedResponse:
    properties:
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  pb.TopupYearStatusSuccessResponse:
    properties:
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  pb.TopupYearlyAmountResponse:
    properties:
      total_amount:
        type: integer
      year:
        type: string
    type: object
  pb.TopupYearlyMethodResponse:
    properties:
      topup_method:
        type: string
      total_amount:
        type: integer
      total_topups:
        type: integer
      year:
        type: string
    type: object
  pb.TransactionMonthAmountResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
    type: object
  pb.TransactionMonthMethodResponse:
    properties:
      month:
        type: string
      payment_method:
        type: string
      total_amount:
        type: integer
      total_transactions:
        type: integer
    type: object
  pb.TransactionMonthStatusFailedResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  pb.TransactionMonthStatusSuccessResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  pb.TransactionResponse:
    properties:
      amount:
        type: integer
      card_number:
        type: string
      created_at:
        type: string
      id:
        type: integer
      merchant_id:
        type: integer
      payment_method:
        type: string
      transaction_no:
        type: string
      transaction_time:
        type: string
      updated_at:
        type: string
    type: object
  pb.TransactionYearMethodResponse:
    properties:
      payment_method:
        type: string
      total_amount:
        type: integer
      total_transactions:
        type: integer
      year:
        type: string
    type: object
  pb.TransactionYearStatusFailedResponse:
    properties:
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  pb.TransactionYearStatusSuccessResponse:
    properties:
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  pb.TransactionYearlyAmountResponse:
    properties:
      total_amount:
        type: integer
      year:
        type: string
    type: object
  pb.TransferMonthAmountResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
    type: object
  pb.TransferMonthStatusFailedResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  pb.TransferMonthStatusSuccessResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  pb.TransferResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      transfer_amount:
        type: integer
      transfer_from:
        type: string
      transfer_no:
        type: string
      transfer_time:
        type: string
      transfer_to:
        type: string
      updated_at:
        type: string
    type: object
  pb.TransferYearAmountResponse:
    properties:
      total_amount:
        type: integer
      year:
        type: string
    type: object
  pb.TransferYearStatusFailedResponse:
    properties:
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  pb.TransferYearStatusSuccessResponse:
    properties:
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  pb.UpdateRoleRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  pb.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      firstname:
        type: string
      id:
        type: integer
      lastname:
        type: string
      updated_at:
        type: string
    type: object
  pb.WithdrawMonthStatusFailedResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
      total_failed:
        type: integer
      year:
        type: string
    type: object
  pb.WithdrawMonthStatusSuccessResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  pb.WithdrawMonthlyAmountResponse:
    properties:
      month:
        type: string
      total_amount:
        type: integer
    type: object
  pb.WithdrawResponse:
    properties:
      card_number:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      withdraw_amount:
        type: integer
      withdraw_id:
        type: integer
      withdraw_no:
        type: string
      withdraw_time:
        type: string
    type: object
  pb.WithdrawYearStatusSuccessResponse:
    properties:
      total_amount:
        type: integer
      total_success:
        type: integer
      year:
        type: string
    type: object
  pb.WithdrawYearlyAmountResponse:
    properties:
      total_amount:
        type: integer
      year:
        type: string
    type: object
  requests.AuthRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  requests.CreateCardRequest:
    properties:
      card_provider:
        type: string
      card_type:
        type: string
      cvv:
        type: string
      expire_date:
        type: string
      user_id:
        minimum: 1
        type: integer
    required:
    - card_provider
    - card_type
    - cvv
    - expire_date
    - user_id
    type: object
  requests.CreateMerchantRequest:
    properties:
      name:
        type: string
      user_id:
        minimum: 1
        type: integer
    required:
    - name
    - user_id
    type: object
  requests.CreateSaldoRequest:
    properties:
      card_number:
        type: string
      total_balance:
        type: integer
    required:
    - card_number
    - total_balance
    type: object
  requests.CreateTopupRequest:
    properties:
      card_number:
        minLength: 1
        type: string
      topup_amount:
        minimum: 50000
        type: integer
      topup_method:
        type: string
    required:
    - card_number
    - topup_amount
    - topup_method
    type: object
  requests.CreateTransactionRequest:
    properties:
      amount:
        minimum: 50000
        type: integer
      card_number:
        minLength: 1
        type: string
      merchant_id:
        minimum: 1
        type: integer
      payment_method:
        type: string
      transaction_time:
        type: string
    required:
    - amount
    - card_number
    - merchant_id
    - payment_method
    - transaction_time
    type: object
  requests.CreateTransferRequest:
    properties:
      transfer_amount:
        minimum: 50000
        type: integer
      transfer_from:
        type: string
      transfer_to:
        minLength: 1
        type: string
    required:
    - transfer_amount
    - transfer_from
    - transfer_to
    type: object
  requests.CreateUserRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - confirm_password
    - email
    - firstname
    - lastname
    - password
    type: object
  requests.CreateWithdrawRequest:
    properties:
      card_number:
        minLength: 1
        type: string
      withdraw_amount:
        minimum: 50000
        type: integer
      withdraw_time:
        type: string
    required:
    - card_number
    - withdraw_amount
    - withdraw_time
    type: object
  requests.RefreshTokenRequest:
    properties:
      refresh_token:
        minLength: 1
        type: string
    required:
    - refresh_token
    type: object
  requests.UpdateCardRequest:
    properties:
      card_id:
        minimum: 1
        type: integer
      card_provider:
        type: string
      card_type:
        type: string
      cvv:
        type: string
      expire_date:
        type: string
      user_id:
        minimum: 1
        type: integer
    required:
    - card_id
    - card_provider
    - card_type
    - cvv
    - expire_date
    - user_id
    type: object
  requests.UpdateMerchantRequest:
    properties:
      merchant_id:
        minimum: 1
        type: integer
      name:
        type: string
      status:
        type: string
      user_id:
        minimum: 1
        type: integer
    required:
    - merchant_id
    - name
    - status
    - user_id
    type: object
  requests.UpdateSaldoRequest:
    properties:
      card_number:
        type: string
      saldo_id:
        type: integer
      total_balance:
        type: integer
    required:
    - card_number
    - saldo_id
    - total_balance
    type: object
  requests.UpdateTopupRequest:
    properties:
      card_number:
        minLength: 1
        type: string
      topup_amount:
        minimum: 50000
        type: integer
      topup_id:
        minimum: 1
        type: integer
      topup_method:
        type: string
    required:
    - card_number
    - topup_amount
    - topup_id
    - topup_method
    type: object
  requests.UpdateTransactionRequest:
    properties:
      amount:
        minimum: 50000
        type: integer
      card_number:
        minLength: 1
        type: string
      merchant_id:
        minimum: 1
        type: integer
      payment_method:
        type: string
      transaction_id:
        minimum: 1
        type: integer
      transaction_time:
        type: string
    required:
    - amount
    - card_number
    - merchant_id
    - payment_method
    - transaction_id
    - transaction_time
    type: object
  requests.UpdateTransferRequest:
    properties:
      transfer_amount:
        minimum: 50000
        type: integer
      transfer_from:
        type: string
      transfer_id:
        minimum: 1
        type: integer
      transfer_to:
        minLength: 1
        type: string
    required:
    - transfer_amount
    - transfer_from
    - transfer_id
    - transfer_to
    type: object
  requests.UpdateUserRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        minLength: 6
        type: string
      user_id:
        minimum: 1
        type: integer
    required:
    - confirm_password
    - email
    - firstname
    - lastname
    - password
    - user_id
    type: object
  requests.UpdateWithdrawRequest:
    properties:
      card_number:
        minLength: 1
        type: string
      withdraw_amount:
        minimum: 50000
        type: integer
      withdraw_id:
        minimum: 1
        type: integer
      withdraw_time:
        type: string
    required:
    - card_number
    - withdraw_amount
    - withdraw_id
    - withdraw_time
    type: object
  response.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user using the provided email and password.
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/pb.ApiResponseLogin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Authenticate a user
      tags:
      - Auth
  /api/auth/me:
    get:
      description: Retrieves the current user's information using a valid access token
        from the Authorization header.
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/pb.ApiResponseGetMe'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      - BearerToken: []
      summary: Get current user information
      tags:
      - Auth
  /api/auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Refreshes the access token using a valid refresh token.
      parameters:
      - description: Refresh token data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/pb.ApiResponseRefreshToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Refresh access token
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user with the provided details.
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/pb.ApiResponseRegister'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register a new user
      tags:
      - Auth
  /api/card:
    get:
      consumes:
      - application/json
      description: Retrieve all cards with pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of data per page
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Card data
          schema:
            $ref: '#/definitions/pb.ApiResponsePaginationCard'
        "500":
          description: Failed to retrieve card data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve all cards
      tags:
      - Card
  /api/card/{card_number}:
    get:
      consumes:
      - application/json
      description: Retrieve a card by its card number
      parameters:
      - description: Card number
        in: path
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Card data
          schema:
            $ref: '#/definitions/pb.ApiResponseCard'
        "500":
          description: Failed to retrieve card record
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve card by card number
      tags:
      - Card
  /api/card/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a card by its ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Card data
          schema:
            $ref: '#/definitions/pb.ApiResponseCard'
        "400":
          description: Invalid card ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve card record
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve card by ID
      tags:
      - Card
  /api/card/active:
    get:
      consumes:
      - application/json
      description: Retrieve an active card associated with a Saldo ID
      produces:
      - application/json
      responses:
        "200":
          description: Card data
          schema:
            $ref: '#/definitions/pb.ApiResponsePaginationCardDeleteAt'
        "400":
          description: Invalid Saldo ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve card record
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve active card by Saldo ID
      tags:
      - Card
  /api/card/create:
    post:
      consumes:
      - application/json
      description: Create a new card for a user
      parameters:
      - description: Create card request
        in: body
        name: CreateCardRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateCardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created card
          schema:
            $ref: '#/definitions/pb.ApiResponseCard'
        "400":
          description: Bad request or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create card
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new card
      tags:
      - Card
  /api/card/dashboard:
    get:
      description: Retrieve dashboard card data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseDashboardCard'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get dashboard card data
      tags:
      - Card
  /api/card/dashboard/{cardNumber}:
    get:
      description: Retrieve dashboard card data for a specific card number
      parameters:
      - description: Card Number
        in: path
        name: cardNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseDashboardCardNumber'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get dashboard card data by card number
      tags:
      - Card
  /api/card/monthly-balance:
    get:
      description: Retrieve monthly balance data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseMonthlyBalance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly balance data
      tags:
      - Card
  /api/card/monthly-balance-by-card:
    get:
      description: Retrieve monthly balance data for a specific year and card number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseMonthlyBalance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly balance data by card number
      tags:
      - Card
  /api/card/monthly-topup-amount:
    get:
      description: Retrieve monthly topup amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly topup amount data
      tags:
      - Card
  /api/card/monthly-topup-amount-by-card:
    get:
      description: Retrieve monthly topup amount data for a specific year and card
        number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly topup amount data by card number
      tags:
      - Card
  /api/card/monthly-transaction-amount:
    get:
      description: Retrieve monthly transaction amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction amount data
      tags:
      - Card
  /api/card/monthly-transaction-amount-by-card:
    get:
      description: Retrieve monthly transaction amount data for a specific year and
        card number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction amount data by card number
      tags:
      - Card
  /api/card/monthly-transfer-receiver-amount:
    get:
      description: Retrieve monthly transfer receiver amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer receiver amount data
      tags:
      - Card
  /api/card/monthly-transfer-receiver-amount-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the total amount received by a specific card number in
        a given year, broken down by month
      parameters:
      - description: Year for which the data is requested
        in: query
        name: year
        required: true
        type: integer
      - description: Card number for which the data is requested
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer receiver amount by card number
      tags:
      - Card
  /api/card/monthly-transfer-sender-amount:
    get:
      description: Retrieve monthly transfer sender amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer sender amount data
      tags:
      - Card
  /api/card/monthly-transfer-sender-amount-by-card:
    get:
      description: Retrieve monthly transfer sender amount data for a specific year
        and card number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer sender amount data by card number
      tags:
      - Card
  /api/card/monthly-withdraw-amount:
    get:
      description: Retrieve monthly withdraw amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraw amount data
      tags:
      - Card
  /api/card/monthly-withdraw-amount-by-card:
    get:
      description: Retrieve monthly withdraw amount data for a specific year and card
        number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraw amount data by card number
      tags:
      - Card
  /api/card/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a card by its ID permanently
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Deleted card
          schema:
            $ref: '#/definitions/pb.ApiResponseCardDelete'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete card
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a card permanently
      tags:
      - Card
  /api/card/permanent/all:
    post:
      consumes:
      - application/json
      description: Permanently delete all card records from the database.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all card records permanently
          schema:
            $ref: '#/definitions/pb.ApiResponseCardAll'
        "500":
          description: Failed to permanently delete all card records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer.: []
      summary: Permanently delete all card records
      tags:
      - Card
  /api/card/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a card by its ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Restored card
          schema:
            $ref: '#/definitions/pb.ApiResponseCard'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore card
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a card
      tags:
      - Card
  /api/card/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all card records that were previously deleted.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all card records
          schema:
            $ref: '#/definitions/pb.ApiResponseCardAll'
        "500":
          description: Failed to restore all card records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all card records
      tags:
      - Card
  /api/card/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed cards
      produces:
      - application/json
      responses:
        "200":
          description: Card data
          schema:
            $ref: '#/definitions/pb.ApiResponsePaginationCardDeleteAt'
        "500":
          description: Failed to retrieve card record
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed cards
      tags:
      - Card
  /api/card/trashed/{id}:
    post:
      consumes:
      - application/json
      description: Trashed a card by its ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Trashed card
          schema:
            $ref: '#/definitions/pb.ApiResponseCard'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to trashed card
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Trashed a card
      tags:
      - Card
  /api/card/update/{id}:
    post:
      consumes:
      - application/json
      description: Update a card for a user
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update card request
        in: body
        name: UpdateCardRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateCardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated card
          schema:
            $ref: '#/definitions/pb.ApiResponseCard'
        "400":
          description: Bad request or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update card
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a card
      tags:
      - Card
  /api/card/user:
    get:
      consumes:
      - application/json
      description: Retrieve a list of cards associated with a user by their ID
      produces:
      - application/json
      responses:
        "200":
          description: Card data
          schema:
            $ref: '#/definitions/pb.ApiResponseCard'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve card record
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve cards by user ID
      tags:
      - Card
  /api/card/yearly-balance:
    get:
      description: Retrieve yearly balance data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyBalance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly balance data
      tags:
      - Card
  /api/card/yearly-balance-by-card:
    get:
      description: Retrieve yearly balance data for a specific year and card number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyBalance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly balance data by card number
      tags:
      - Card
  /api/card/yearly-topup-amount-by-card:
    get:
      description: Retrieve yearly topup amount data for a specific year and card
        number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly topup amount data by card number
      tags:
      - Card
  /api/card/yearly-transaction-amount:
    get:
      description: Retrieve yearly transaction amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction amount data
      tags:
      - Card
  /api/card/yearly-transaction-amount-by-card:
    get:
      description: Retrieve yearly transaction amount data for a specific year and
        card number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction amount data by card number
      tags:
      - Card
  /api/card/yearly-transfer-receiver-amount:
    get:
      description: Retrieve yearly transfer receiver amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer receiver amount data
      tags:
      - Card
  /api/card/yearly-transfer-receiver-amount-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the total amount received by a specific card number in
        a given year
      parameters:
      - description: Year for which the data is requested
        in: query
        name: year
        required: true
        type: integer
      - description: Card number for which the data is requested
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer receiver amount by card number
      tags:
      - Card
  /api/card/yearly-transfer-sender-amount-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the total amount sent by a specific card number in a given
        year
      parameters:
      - description: Year for which the data is requested
        in: query
        name: year
        required: true
        type: integer
      - description: Card number for which the data is requested
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer sender amount by card number
      tags:
      - Card
  /api/card/yearly-withdraw-amount:
    get:
      description: Retrieve yearly withdraw amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraw amount data
      tags:
      - Card
  /api/card/yearly-withdraw-amount-by-card:
    get:
      description: Retrieve yearly withdraw amount data for a specific year and card
        number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraw amount data by card number
      tags:
      - Card
  /api/merchant:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all merchants
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of merchants
          schema:
            $ref: '#/definitions/pb.ApiResponsePaginationMerchant'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all merchants
      tags:
      - Merchant
  /api/merchant/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a merchant by its ID permanently
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Deleted merchant
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchantDelete'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a merchant permanently
      tags:
      - Merchant
    get:
      consumes:
      - application/json
      description: Retrieve a merchant by its ID.
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Merchant data
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchant'
        "400":
          description: Invalid merchant ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a merchant by ID
      tags:
      - Merchant
  /api/merchant/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active merchants
      produces:
      - application/json
      responses:
        "200":
          description: List of active merchants
          schema:
            $ref: '#/definitions/pb.ApiResponsesMerchant'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find active merchants
      tags:
      - Merchant
  /api/merchant/amount/monthly/by-merchant:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction amounts for a specific merchant by
        year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction amounts
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchantMonthlyAmount'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction amounts for a specific merchant
      tags:
      - Merchant
  /api/merchant/api-key:
    get:
      consumes:
      - application/json
      description: Retrieve a merchant by its API key
      parameters:
      - description: API key
        in: query
        name: api_key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Merchant data
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchant'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a merchant by API key
      tags:
      - Merchant
  /api/merchant/create:
    post:
      consumes:
      - application/json
      description: Create a new merchant with the given name and user ID
      parameters:
      - description: Create merchant request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.CreateMerchantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created merchant
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchant'
        "400":
          description: Bad request or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new merchant
      tags:
      - Merchant
  /api/merchant/merchant-user:
    get:
      consumes:
      - application/json
      description: Retrieve a merchant by its user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Merchant data
          schema:
            $ref: '#/definitions/pb.ApiResponsesMerchant'
        "400":
          description: Invalid merchant ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a merchant by user ID
      tags:
      - Merchant
  /api/merchant/monthly-amount:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction amounts for a merchant by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction amounts
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchantMonthlyAmount'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction amounts for a merchant
      tags:
      - Merchant
  /api/merchant/monthly-payment-methods:
    get:
      consumes:
      - application/json
      description: Retrieve monthly payment methods for a merchant by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly payment methods
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchantMonthlyPaymentMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly payment methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly payment methods for a merchant
      tags:
      - Merchant
  /api/merchant/monthly-payment-methods-by-merchant:
    get:
      consumes:
      - application/json
      description: Retrieve monthly payment methods for a specific merchant by year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly payment methods
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchantMonthlyPaymentMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly payment methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly payment methods for a specific merchant
      tags:
      - Merchant
  /api/merchant/payment-methods/yearly/by-merchant:
    get:
      consumes:
      - application/json
      description: Retrieve yearly payment methods for a specific merchant by year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly payment methods
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchantYearlyPaymentMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly payment methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly payment methods for a specific merchant
      tags:
      - Merchant
  /api/merchant/permanent/all:
    delete:
      consumes:
      - application/json
      description: Permanently delete all merchant records from the database.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all merchant records permanently
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchantAll'
        "500":
          description: Failed to permanently delete all merchant records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all merchant records
      tags:
      - Merchant
  /api/merchant/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a merchant by its ID
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Restored merchant
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchant'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a merchant
      tags:
      - Merchant
  /api/merchant/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all merchant records that were previously deleted.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all merchant records
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchantAll'
        "500":
          description: Failed to restore all merchant records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all merchant records
      tags:
      - Merchant
  /api/merchant/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed merchants
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed merchants
          schema:
            $ref: '#/definitions/pb.ApiResponsesMerchant'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find trashed merchants
      tags:
      - Merchant
  /api/merchant/trashed/{id}:
    post:
      consumes:
      - application/json
      description: Trashed a merchant by its ID
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Trashed merchant
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchant'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to trashed merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Trashed a merchant
      tags:
      - Merchant
  /api/merchant/update/{id}:
    post:
      consumes:
      - application/json
      description: Update a merchant with the given ID
      parameters:
      - description: Update merchant request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateMerchantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated merchant
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchant'
        "400":
          description: Bad request or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a merchant
      tags:
      - Merchant
  /api/merchant/yearly-amount:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction amounts for a merchant by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction amounts
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyAmount'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction amounts for a merchant
      tags:
      - Merchant
  /api/merchant/yearly-payment-methods-by-merchant:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction amounts for a specific merchant by
        year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction amounts
          schema:
            $ref: '#/definitions/pb.ApiResponseMerchantYearlyAmount'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction amounts for a specific merchant
      tags:
      - Merchant
  /api/role:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of roles with optional search and pagination
        parameters.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of roles
          schema:
            $ref: '#/definitions/pb.ApiResponsePaginationRole'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch roles
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get all roles
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Create a new role with the provided details.
      parameters:
      - description: Role data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pb.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created role data
          schema:
            $ref: '#/definitions/pb.ApiResponseRole'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new role
      tags:
      - Role
  /api/role/{id}:
    delete:
      consumes:
      - application/json
      description: Soft-delete a role by its ID.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Soft-deleted role data
          schema:
            $ref: '#/definitions/pb.ApiResponseRole'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to soft-delete role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Soft-delete a role
      tags:
      - Role
    get:
      consumes:
      - application/json
      description: Retrieve a role by its ID.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Role data
          schema:
            $ref: '#/definitions/pb.ApiResponseRole'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get a role by ID
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Update an existing role with the provided details.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Role data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pb.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated role data
          schema:
            $ref: '#/definitions/pb.ApiResponseRole'
        "400":
          description: Invalid role ID or request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a role
      tags:
      - Role
  /api/role/active:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of active roles with optional search
        and pagination parameters.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of active roles
          schema:
            $ref: '#/definitions/pb.ApiResponsePaginationRoleDeleteAt'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch active roles
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get active roles
      tags:
      - Role
  /api/role/permanent-all:
    delete:
      consumes:
      - application/json
      description: Permanently delete all roles.
      produces:
      - application/json
      responses:
        "200":
          description: Permanently deleted roles data
          schema:
            $ref: '#/definitions/pb.ApiResponseRoleAll'
        "500":
          description: Failed to delete all roles permanently
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all roles
      tags:
      - Role
  /api/role/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a role by its ID.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Permanently deleted role data
          schema:
            $ref: '#/definitions/pb.ApiResponseRole'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete role permanently
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a role
      tags:
      - Role
  /api/role/restore-all:
    put:
      consumes:
      - application/json
      description: Restore all soft-deleted roles.
      produces:
      - application/json
      responses:
        "200":
          description: Restored roles data
          schema:
            $ref: '#/definitions/pb.ApiResponseRoleAll'
        "500":
          description: Failed to restore all roles
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all soft-deleted roles
      tags:
      - Role
  /api/role/restore/{id}:
    put:
      consumes:
      - application/json
      description: Restore a soft-deleted role by its ID.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Restored role data
          schema:
            $ref: '#/definitions/pb.ApiResponseRole'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a soft-deleted role
      tags:
      - Role
  /api/role/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of trashed roles with optional search
        and pagination parameters.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed roles
          schema:
            $ref: '#/definitions/pb.ApiResponsePaginationRoleDeleteAt'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch trashed roles
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get trashed roles
      tags:
      - Role
  /api/role/user/{user_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a role by the associated user ID.
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Role data
          schema:
            $ref: '#/definitions/pb.ApiResponseRole'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch role by user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get role by user ID
      tags:
      - Role
  /api/saldo/yearly-balances:
    get:
      consumes:
      - application/json
      description: Retrieve yearly saldo balances for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly saldo balances
          schema:
            $ref: '#/definitions/pb.ApiResponseYearSaldoBalances'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly saldo balances
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly saldo balances
      tags:
      - Saldo
  /api/saldos:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all saldo data with pagination and search
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of saldo data
          schema:
            $ref: '#/definitions/pb.ApiResponsePaginationSaldo'
        "500":
          description: Failed to retrieve saldo data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all saldo data
      tags:
      - Saldo
  /api/saldos/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a saldo by its ID
      parameters:
      - description: Saldo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Saldo data
          schema:
            $ref: '#/definitions/pb.ApiResponseSaldo'
        "400":
          description: Invalid saldo ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve saldo data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a saldo by ID
      tags:
      - Saldo
  /api/saldos/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all active saldo data
      produces:
      - application/json
      responses:
        "200":
          description: List of saldo data
          schema:
            $ref: '#/definitions/pb.ApiResponsesSaldo'
        "500":
          description: Failed to retrieve saldo data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve all active saldo data
      tags:
      - Saldo
  /api/saldos/card_number/{card_number}:
    get:
      consumes:
      - application/json
      description: Retrieve a saldo by its card number
      parameters:
      - description: Card number
        in: path
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Saldo data
          schema:
            $ref: '#/definitions/pb.ApiResponseSaldo'
        "500":
          description: Failed to retrieve saldo data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a saldo by card number
      tags:
      - Saldo
  /api/saldos/create:
    post:
      consumes:
      - application/json
      description: Create a new saldo record with the provided card number and total
        balance.
      parameters:
      - description: Create Saldo Request
        in: body
        name: CreateSaldoRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateSaldoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created saldo record
          schema:
            $ref: '#/definitions/pb.ApiResponseSaldo'
        "400":
          description: 'Bad Request: Invalid request body or validation error'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create saldo
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new saldo
      tags:
      - Saldo
  /api/saldos/monthly-balances:
    get:
      consumes:
      - application/json
      description: Retrieve monthly saldo balances for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly saldo balances
          schema:
            $ref: '#/definitions/pb.ApiResponseMonthSaldoBalances'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly saldo balances
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly saldo balances
      tags:
      - Saldo
  /api/saldos/monthly-total-balance:
    get:
      consumes:
      - application/json
      description: Retrieve the total saldo balance for a specific month and year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly total saldo balance
          schema:
            $ref: '#/definitions/pb.ApiResponseMonthTotalSaldo'
        "400":
          description: Invalid year or month parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly total saldo balance
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly total saldo balance
      tags:
      - Saldo
  /api/saldos/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete an existing saldo record by its ID.
      parameters:
      - description: Saldo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted saldo record
          schema:
            $ref: '#/definitions/pb.ApiResponseSaldoDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete saldo
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a saldo
      tags:
      - Saldo
  /api/saldos/permanent/all:
    post:
      consumes:
      - application/json
      description: Permanently delete all saldo records from the database.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all saldo records permanently
          schema:
            $ref: '#/definitions/pb.ApiResponseSaldoAll'
        "500":
          description: Failed to permanently delete all saldo records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all saldo records
      tags:
      - Saldo
  /api/saldos/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore an existing saldo record from the trash by its ID.
      parameters:
      - description: Saldo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored saldo record
          schema:
            $ref: '#/definitions/pb.ApiResponseSaldo'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore saldo
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed saldo
      tags:
      - Saldo
  /api/saldos/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all saldo records that were previously deleted.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all saldo records
          schema:
            $ref: '#/definitions/pb.ApiResponseSaldoAll'
        "500":
          description: Failed to restore all saldo records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all saldo records
      tags:
      - Saldo
  /api/saldos/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all trashed saldo data
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed saldo data
          schema:
            $ref: '#/definitions/pb.ApiResponsesSaldo'
        "500":
          description: Failed to retrieve saldo data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed saldo data
      tags:
      - Saldo
  /api/saldos/trashed/{id}:
    post:
      consumes:
      - application/json
      description: Soft delete an existing saldo record by its ID.
      parameters:
      - description: Saldo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully trashed saldo record
          schema:
            $ref: '#/definitions/pb.ApiResponseSaldo'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to trashed saldo
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Soft delete a saldo
      tags:
      - Saldo
  /api/saldos/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing saldo record with the provided card number and
        total balance.
      parameters:
      - description: Saldo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Saldo Request
        in: body
        name: UpdateSaldoRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateSaldoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated saldo record
          schema:
            $ref: '#/definitions/pb.ApiResponseSaldo'
        "400":
          description: 'Bad Request: Invalid request body or validation error'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update saldo
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing saldo
      tags:
      - Saldo
  /api/saldos/yearly-total-balance:
    get:
      consumes:
      - application/json
      description: Retrieve the total saldo balance for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly total saldo balance
          schema:
            $ref: '#/definitions/pb.ApiResponseYearTotalSaldo'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly total saldo balance
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly total saldo balance
      tags:
      - Saldo
  /api/topup/monthly-amounts:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up amounts for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up amounts
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupMonthAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up amounts
      tags:
      - Topup
  /api/topup/yearly-topup-amount:
    get:
      description: Retrieve yearly topup amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly topup amount data
      tags:
      - Card
  /api/topups:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all topup data with pagination and search
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of topup data
          schema:
            $ref: '#/definitions/pb.ApiResponsePaginationTopup'
        "500":
          description: Failed to retrieve topup data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      tags:
      - Topup
  /api/topups/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a topup record using its ID
      parameters:
      - description: Topup ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Topup data
          schema:
            $ref: '#/definitions/pb.ApiResponseTopup'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve topup data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a topup by ID
      tags:
      - Topup
  /api/topups/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active topup records
      produces:
      - application/json
      responses:
        "200":
          description: Active topup data
          schema:
            $ref: '#/definitions/pb.ApiResponsesTopup'
        "500":
          description: Failed to retrieve topup data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find active topups
      tags:
      - Topup
  /api/topups/card_number/{card_number}:
    get:
      consumes:
      - application/json
      description: Retrieve a topup record using its card number
      parameters:
      - description: Card number
        in: path
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Topup data
          schema:
            $ref: '#/definitions/pb.ApiResponsesTopup'
        "500":
          description: Failed to retrieve topup data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a topup by its card number
      tags:
      - Topup
  /api/topups/create:
    post:
      consumes:
      - application/json
      description: Create a new topup record
      parameters:
      - description: Create topup request
        in: body
        name: CreateTopupRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateTopupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created topup data
          schema:
            $ref: '#/definitions/pb.ApiResponseTopup'
        "400":
          description: 'Bad Request: '
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to create topup: '
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create topup
      tags:
      - Topup
  /api/topups/monthly-amounts-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up amounts for a specific card number
        and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up amounts by card number
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupMonthAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up amounts by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up amounts by card number
      tags:
      - Topup
  /api/topups/monthly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up status for failed transactions by year
        and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up status for failed transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupMonthStatusFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up status for failed transactions
      tags:
      - Topup
  /api/topups/monthly-methods:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up methods for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up methods
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupMonthMethod'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up methods
      tags:
      - Topup
  /api/topups/monthly-methods-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up methods for a specific card number
        and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up methods by card number
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupMonthMethod'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up methods by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up methods by card number
      tags:
      - Topup
  /api/topups/monthly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up status for successful transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up status for successful transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupMonthStatusSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up status for successful transactions
      tags:
      - Topup
  /api/topups/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a topup record by its ID.
      parameters:
      - description: Topup ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted topup record permanently
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete topup:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a topup
      tags:
      - Topup
  /api/topups/permanent/all:
    delete:
      consumes:
      - application/json
      description: Permanently delete all topup records from the database.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all topup records permanently
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupAll'
        "500":
          description: Failed to permanently delete all topup records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all topup records
      tags:
      - Topup
  /api/topups/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed topup record by its ID.
      parameters:
      - description: Topup ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored topup record
          schema:
            $ref: '#/definitions/pb.ApiResponseTopup'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to restore topup:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed topup
      tags:
      - Topup
  /api/topups/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all topup records that were previously deleted.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all topup records
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupAll'
        "500":
          description: Failed to restore all topup records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all topup records
      tags:
      - Topup
  /api/topups/trash/{id}:
    post:
      consumes:
      - application/json
      description: Trash a topup record by its ID.
      parameters:
      - description: Topup ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully trashed topup record
          schema:
            $ref: '#/definitions/pb.ApiResponseTopup'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to trash topup:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Trash a topup
      tags:
      - Topup
  /api/topups/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed topup records
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed topup data
          schema:
            $ref: '#/definitions/pb.ApiResponsesTopup'
        "500":
          description: Failed to retrieve topup data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed topups
      tags:
      - Topup
  /api/topups/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing topup record with the provided details
      parameters:
      - description: Topup ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update topup request
        in: body
        name: UpdateTopupRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateTopupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated topup data
          schema:
            $ref: '#/definitions/pb.ApiResponseTopup'
        "400":
          description: 'Bad Request: Invalid input data'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to update topup: '
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update topup
      tags:
      - Topup
  /api/topups/yearly-amounts:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up amounts for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up amounts
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupYearAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up amounts
      tags:
      - Topup
  /api/topups/yearly-amounts-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up amounts for a specific card number and
        year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up amounts by card number
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupYearAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up amounts by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up amounts by card number
      tags:
      - Topup
  /api/topups/yearly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up status for failed transactions by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up status for failed transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupYearStatusFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up status for failed transactions
      tags:
      - Topup
  /api/topups/yearly-methods:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up methods for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up methods
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupYearMethod'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up methods
      tags:
      - Topup
  /api/topups/yearly-methods-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up methods for a specific card number and
        year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up methods by card number
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupYearMethod'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up methods by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up methods by card number
      tags:
      - Topup
  /api/topups/yearly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up status for successful transactions by
        year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up status for successful transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTopupYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up status for successful transactions
      tags:
      - Topup
  /api/transactions:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all transactions
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            $ref: '#/definitions/pb.ApiResponsePaginationTransaction'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all
      tags:
      - Transaction
  /api/transactions/{card_number}:
    get:
      consumes:
      - application/json
      description: Retrieve a transaction record using its card number
      parameters:
      - description: Card number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction data
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactions'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a transaction by card number
      tags:
      - Transaction
  /api/transactions/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a transaction record using its ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction data
          schema:
            $ref: '#/definitions/pb.ApiResponseTransaction'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a transaction by ID
      tags:
      - Transaction
  /api/transactions/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active transactions
      produces:
      - application/json
      responses:
        "200":
          description: List of active transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactions'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find active transactions
      tags:
      - Transaction
  /api/transactions/create:
    post:
      consumes:
      - application/json
      description: Create a new transaction record with the provided details.
      parameters:
      - description: Create Transaction Request
        in: body
        name: CreateTransactionRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created transaction record
          schema:
            $ref: '#/definitions/pb.ApiResponseTransaction'
        "400":
          description: 'Bad Request: Invalid request body or validation error'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create transaction
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new transaction
      tags:
      - Transaction
  /api/transactions/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a transaction record by its ID.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted transaction record
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete transaction:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a transaction
      tags:
      - Transaction
  /api/transactions/delete/all:
    post:
      consumes:
      - application/json
      description: Permanently delete a transaction all.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted transaction record
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionAll'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete transaction:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a transaction
      tags:
      - Transaction
  /api/transactions/merchant/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of transactions using the merchant ID
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction data
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactions'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find transactions by merchant ID
      tags:
      - Transaction
  /api/transactions/monthly-amounts:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transaction amounts for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction amounts
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionMonthAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction amounts
      tags:
      - Transaction
  /api/transactions/monthly-amounts-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transaction amounts for a specific card number
        and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction amounts by card number
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionMonthAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction amounts by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction amounts by card number
      tags:
      - Transaction
  /api/transactions/monthly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transaction status for failed transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction status for failed transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionMonthStatusFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction status for failed transactions
      tags:
      - Transaction
  /api/transactions/monthly-payment-methods:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly payment methods for transactions by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly payment methods
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionMonthMethod'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly payment methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly payment methods
      tags:
      - Transaction
  /api/transactions/monthly-payment-methods-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly payment methods for transactions by card number
        and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly payment methods by card number
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionMonthMethod'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly payment methods by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly payment methods by card number
      tags:
      - Transaction
  /api/transactions/monthly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transaction status for successful transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction status for successful transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionMonthStatusSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction status for successful
            transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction status for successful transactions
      tags:
      - Transaction
  /api/transactions/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed transaction record by its ID.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored transaction record
          schema:
            $ref: '#/definitions/pb.ApiResponseTransaction'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to restore transaction:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed transaction
      tags:
      - Transaction
  /api/transactions/restore/all:
    post:
      consumes:
      - application/json
      description: Restore a trashed transaction all.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored transaction record
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionAll'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to restore transaction:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed transaction
      tags:
      - Transaction
  /api/transactions/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed transactions
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactions'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed transactions
      tags:
      - Transaction
  /api/transactions/trashed/{id}:
    post:
      consumes:
      - application/json
      description: Trash a transaction record by its ID.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully trashed transaction record
          schema:
            $ref: '#/definitions/pb.ApiResponseTransaction'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to trashed transaction
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Trash a transaction
      tags:
      - Transaction
  /api/transactions/update:
    post:
      consumes:
      - application/json
      description: Update an existing transaction record using its ID
      parameters:
      - description: Transaction data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated transaction data
          schema:
            $ref: '#/definitions/pb.ApiResponseTransaction'
        "400":
          description: 'Bad Request: Invalid request body or validation error'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update transaction
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a transaction
      tags:
      - Transaction
  /api/transactions/yearly-amounts:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transaction amounts for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction amounts
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionYearAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction amounts
      tags:
      - Transaction
  /api/transactions/yearly-amounts-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transaction amounts for a specific card number
        and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction amounts by card number
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionYearAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction amounts by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction amounts by card number
      tags:
      - Transaction
  /api/transactions/yearly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transaction status for failed transactions
        by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction status for failed transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionYearStatusFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction status for failed transactions
      tags:
      - Transaction
  /api/transactions/yearly-payment-methods:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly payment methods for transactions by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly payment methods
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionYearMethod'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly payment methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly payment methods
      tags:
      - Transaction
  /api/transactions/yearly-payment-methods-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly payment methods for transactions by card number
        and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly payment methods by card number
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionYearMethod'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly payment methods by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly payment methods by card number
      tags:
      - Transaction
  /api/transactions/yearly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transaction status for successful transactions
        by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction status for successful transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTransactionYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction status for successful
            transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction status for successful transactions
      tags:
      - Transaction
  /api/transfer:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all transfer records with pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transfer records
          schema:
            $ref: '#/definitions/pb.ApiResponsePaginationTransfer'
        "500":
          description: Failed to retrieve transfer data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all transfer records
      tags:
      - Transfer
  /api/transfer/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a transfer record using its ID
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transfer data
          schema:
            $ref: '#/definitions/pb.ApiResponseTransfer'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve transfer data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a transfer by ID
      tags:
      - Transfer
  /api/transfer/create:
    post:
      consumes:
      - application/json
      description: Create a new transfer record
      parameters:
      - description: Transfer request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.CreateTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Transfer data
          schema:
            $ref: '#/definitions/pb.ApiResponseTransfer'
        "400":
          description: Validation Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create transfer
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a transfer
      tags:
      - Transfer
  /api/transfer/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a transfer record all.
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted transfer all
          schema:
            $ref: '#/definitions/pb.ApiResponseTransferAll'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete transfer:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a transfer
      tags:
      - Transfer
  /api/transfer/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed transfer record by its ID.
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored transfer record
          schema:
            $ref: '#/definitions/pb.ApiResponseTransfer'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to restore transfer:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed transfer
      tags:
      - Transfer
  /api/transfer/restore/all:
    post:
      consumes:
      - application/json
      description: Restore a trashed transfer all
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored transfer record
          schema:
            $ref: '#/definitions/pb.ApiResponseTransferAll'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to restore transfer:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed transfer
      tags:
      - Transfer
  /api/transfer/transfer_from/{transfer_from}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of transfer records using the transfer_from parameter
      parameters:
      - description: Transfer From
        in: path
        name: transfer_from
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transfer data
          schema:
            $ref: '#/definitions/pb.ApiResponseTransfers'
        "500":
          description: Failed to retrieve transfer data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find transfers by transfer_from
      tags:
      - Transfer
  /api/transfer/transfer_to/{transfer_to}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of transfer records using the transfer_to parameter
      parameters:
      - description: Transfer To
        in: path
        name: transfer_to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transfer data
          schema:
            $ref: '#/definitions/pb.ApiResponseTransfers'
        "500":
          description: Failed to retrieve transfer data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find transfers by transfer_to
      tags:
      - Transfer
  /api/transfer/trash/{id}:
    post:
      consumes:
      - application/json
      description: Soft delete a transfer record by its ID.
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully trashed transfer record
          schema:
            $ref: '#/definitions/pb.ApiResponseTransfer'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to trashed transfer
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Soft delete a transfer
      tags:
      - Transfer
  /api/transfer/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed transfer records
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed transfer records
          schema:
            $ref: '#/definitions/pb.ApiResponseTransfers'
        "500":
          description: Failed to retrieve transfer data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed transfers
      tags:
      - Transfer
  /api/transfer/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing transfer record
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Transfer request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Transfer data
          schema:
            $ref: '#/definitions/pb.ApiResponseTransfer'
        "400":
          description: Validation Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update transfer
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a transfer
      tags:
      - Transfer
  /api/transfer/yearly-transfer-sender-amount:
    get:
      description: Retrieve yearly transfer sender amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer sender amount data
      tags:
      - Card
  /api/transfers/monthly-amounts:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transfer amounts for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transfer amounts
          schema:
            $ref: '#/definitions/pb.ApiResponseTransferMonthAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transfer amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer amounts
      tags:
      - Transfer
  /api/transfers/monthly-amounts-by-receiver-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transfer amounts for a specific receiver card
        number and year.
      parameters:
      - description: Receiver Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transfer amounts by receiver card number
          schema:
            $ref: '#/definitions/pb.ApiResponseTransferMonthAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transfer amounts by receiver card
            number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer amounts by receiver card number
      tags:
      - Transfer
  /api/transfers/monthly-amounts-by-sender-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transfer amounts for a specific sender card
        number and year.
      parameters:
      - description: Sender Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transfer amounts by sender card number
          schema:
            $ref: '#/definitions/pb.ApiResponseTransferMonthAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transfer amounts by sender card
            number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer amounts by sender card number
      tags:
      - Transfer
  /api/transfers/monthly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transfer status for failed transactions by
        year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transfer status for failed transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTransferMonthStatusFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transfer status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer status for failed transactions
      tags:
      - Transfer
  /api/transfers/monthly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transfer status for successful transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transfer status for successful transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTransferMonthStatusSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transfer status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer status for successful transactions
      tags:
      - Transfer
  /api/transfers/yearly-amounts:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transfer amounts for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transfer amounts
          schema:
            $ref: '#/definitions/pb.ApiResponseTransferYearAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transfer amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer amounts
      tags:
      - Transfer
  /api/transfers/yearly-amounts-by-receiver-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transfer amounts for a specific receiver card
        number and year.
      parameters:
      - description: Receiver Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transfer amounts by receiver card number
          schema:
            $ref: '#/definitions/pb.ApiResponseTransferYearAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transfer amounts by receiver card
            number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer amounts by receiver card number
      tags:
      - Transfer
  /api/transfers/yearly-amounts-by-sender-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transfer amounts for a specific sender card
        number and year.
      parameters:
      - description: Sender Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transfer amounts by sender card number
          schema:
            $ref: '#/definitions/pb.ApiResponseTransferYearAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transfer amounts by sender card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer amounts by sender card number
      tags:
      - Transfer
  /api/transfers/yearly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transfer status for failed transactions by
        year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transfer status for failed transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTransferYearStatusFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transfer status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer status for failed transactions
      tags:
      - Transfer
  /api/transfers/yearly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transfer status for successful transactions
        by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transfer status for successful transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseTransferYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transfer status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer status for successful transactions
      tags:
      - Transfer
  /api/user:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            $ref: '#/definitions/pb.ApiResponsePaginationUser'
        "500":
          description: Failed to retrieve user data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all users
      tags:
      - User
  /api/user/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            $ref: '#/definitions/pb.ApiResponseUser'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve user data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find user by ID
      tags:
      - User
  /api/user/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active users
      produces:
      - application/json
      responses:
        "200":
          description: List of active users
          schema:
            $ref: '#/definitions/pb.ApiResponsesUser'
        "500":
          description: Failed to retrieve user data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve active users
      tags:
      - User
  /api/user/create:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided details
      parameters:
      - description: Create user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created user
          schema:
            $ref: '#/definitions/pb.ApiResponseUser'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new user
      tags:
      - User
  /api/user/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted user record permanently
          schema:
            $ref: '#/definitions/pb.ApiResponseUserDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete user:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a user
      tags:
      - User
  /api/user/delete/all:
    post:
      consumes:
      - application/json
      description: Permanently delete a user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted user record permanently
          schema:
            $ref: '#/definitions/pb.ApiResponseUserDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete user:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a user
      tags:
      - User
  /api/user/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored user
          schema:
            $ref: '#/definitions/pb.ApiResponseUser'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed user
      tags:
      - User
  /api/user/restore/all:
    post:
      consumes:
      - application/json
      description: Restore a trashed user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored user all
          schema:
            $ref: '#/definitions/pb.ApiResponseUserAll'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed user
      tags:
      - User
  /api/user/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed user records
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed user data
          schema:
            $ref: '#/definitions/pb.ApiResponsesUser'
        "500":
          description: Failed to retrieve user data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed users
      tags:
      - User
  /api/user/trashed/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a trashed user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved trashed user
          schema:
            $ref: '#/definitions/pb.ApiResponseUser'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve trashed user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve a trashed user
      tags:
      - User
  /api/user/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing user record with the provided details
      parameters:
      - description: Update user request
        in: body
        name: UpdateUserRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user
          schema:
            $ref: '#/definitions/pb.ApiResponseUser'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing user
      tags:
      - User
  /api/withdraw:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all withdraw records with pagination and search
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of withdraw records
          schema:
            $ref: '#/definitions/pb.ApiResponsePaginationWithdraw'
        "500":
          description: Failed to retrieve withdraw data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all withdraw records
      tags:
      - Withdraw
  /api/withdraw/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a withdraw record using its ID
      parameters:
      - description: Withdraw ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Withdraw data
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdraw'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve withdraw data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a withdraw by ID
      tags:
      - Withdraw
  /api/withdraws/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all active withdraw data
      produces:
      - application/json
      responses:
        "200":
          description: List of withdraw data
          schema:
            $ref: '#/definitions/pb.ApiResponsesWithdraw'
        "500":
          description: Failed to retrieve withdraw data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve all active withdraw data
      tags:
      - Withdraw
  /api/withdraws/card/{card_number}:
    get:
      consumes:
      - application/json
      description: Retrieve a withdraw record using its card number
      parameters:
      - description: Card number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Withdraw data
          schema:
            $ref: '#/definitions/pb.ApiResponsesWithdraw'
        "400":
          description: 'Bad Request: Invalid card number'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve withdraw data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a withdraw by card number
      tags:
      - Withdraw
  /api/withdraws/create:
    post:
      consumes:
      - application/json
      description: Create a new withdraw record with the provided details.
      parameters:
      - description: Create Withdraw Request
        in: body
        name: CreateWithdrawRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateWithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created withdraw record
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdraw'
        "400":
          description: 'Bad Request: Invalid request body or validation error'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create withdraw
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new withdraw
      tags:
      - Withdraw
  /api/withdraws/monthly:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly withdraws for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly withdraws
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdrawMonthAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly withdraws
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraws
      tags:
      - Withdraw
  /api/withdraws/monthly-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly withdraws for a specific card number and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly withdraws by card number
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdrawMonthAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly withdraws by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraws by card number
      tags:
      - Withdraw
  /api/withdraws/monthly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly withdraw status for failed transactions by
        year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly withdraw status for failed transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdrawMonthStatusFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly withdraw status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraw status for failed transactions
      tags:
      - Withdraw
  /api/withdraws/monthly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly withdraw status for successful transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly withdraw status for successful transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdrawMonthStatusSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly withdraw status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraw status for successful transactions
      tags:
      - Withdraw
  /api/withdraws/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a withdraw by its ID
      parameters:
      - description: Withdraw ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted withdraw permanently
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdrawDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete withdraw permanently:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a withdraw by ID
      tags:
      - Withdraw
  /api/withdraws/permanent/all:
    post:
      consumes:
      - application/json
      description: Permanently delete a withdraw by its ID
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted withdraw permanently
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdrawAll'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete withdraw permanently:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a withdraw by ID
      tags:
      - Withdraw
  /api/withdraws/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a withdraw by its ID
      parameters:
      - description: Withdraw ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Withdraw data
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdraw'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore withdraw
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a withdraw by ID
      tags:
      - Withdraw
  /api/withdraws/restore/all:
    post:
      consumes:
      - application/json
      description: Restore a withdraw all
      produces:
      - application/json
      responses:
        "200":
          description: Withdraw data
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdrawAll'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore withdraw
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a withdraw all
      tags:
      - Withdraw
  /api/withdraws/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed withdraw data
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed withdraw data
          schema:
            $ref: '#/definitions/pb.ApiResponsesWithdraw'
        "500":
          description: Failed to retrieve withdraw data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed withdraw data
      tags:
      - Withdraw
  /api/withdraws/trashed/{id}:
    post:
      consumes:
      - application/json
      description: Trash a withdraw using its ID
      parameters:
      - description: Withdraw ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Withdaw data
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdraw'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to trash withdraw
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Trash a withdraw by ID
      tags:
      - Withdraw
  /api/withdraws/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing withdraw record with the provided details.
      parameters:
      - description: Withdraw ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Withdraw Request
        in: body
        name: UpdateWithdrawRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateWithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated withdraw record
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdraw'
        "400":
          description: 'Bad Request: Invalid request body or validation error'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update withdraw
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing withdraw
      tags:
      - Withdraw
  /api/withdraws/yearly:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly withdraws for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly withdraws
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdrawYearAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly withdraws
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraws
      tags:
      - Withdraw
  /api/withdraws/yearly-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly withdraws for a specific card number and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly withdraws by card number
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdrawYearAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly withdraws by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraws by card number
      tags:
      - Withdraw
  /api/withdraws/yearly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly withdraw status for failed transactions by
        year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly withdraw status for failed transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdrawYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly withdraw status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraw status for failed transactions
      tags:
      - Withdraw
  /api/withdraws/yearly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly withdraw status for successful transactions
        by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly withdraw status for successful transactions
          schema:
            $ref: '#/definitions/pb.ApiResponseWithdrawYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly withdraw status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraw status for successful transactions
      tags:
      - Withdraw
  /auth/hello:
    get:
      description: Returns a simple "Hello" message for testing purposes.
      produces:
      - application/json
      responses:
        "200":
          description: Hello
          schema:
            type: string
      summary: Returns a "Hello" message
      tags:
      - Auth
swagger: "2.0"
