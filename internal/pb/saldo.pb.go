// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: saldo.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FindAllSaldoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Search        string                 `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllSaldoRequest) Reset() {
	*x = FindAllSaldoRequest{}
	mi := &file_saldo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllSaldoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllSaldoRequest) ProtoMessage() {}

func (x *FindAllSaldoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllSaldoRequest.ProtoReflect.Descriptor instead.
func (*FindAllSaldoRequest) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{0}
}

func (x *FindAllSaldoRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindAllSaldoRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindAllSaldoRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type FindMonthlySaldoTotalBalance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          int32                  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month         int32                  `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindMonthlySaldoTotalBalance) Reset() {
	*x = FindMonthlySaldoTotalBalance{}
	mi := &file_saldo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindMonthlySaldoTotalBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindMonthlySaldoTotalBalance) ProtoMessage() {}

func (x *FindMonthlySaldoTotalBalance) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindMonthlySaldoTotalBalance.ProtoReflect.Descriptor instead.
func (*FindMonthlySaldoTotalBalance) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{1}
}

func (x *FindMonthlySaldoTotalBalance) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *FindMonthlySaldoTotalBalance) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

type FindYearlySaldo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          int32                  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindYearlySaldo) Reset() {
	*x = FindYearlySaldo{}
	mi := &file_saldo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindYearlySaldo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindYearlySaldo) ProtoMessage() {}

func (x *FindYearlySaldo) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindYearlySaldo.ProtoReflect.Descriptor instead.
func (*FindYearlySaldo) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{2}
}

func (x *FindYearlySaldo) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type FindByIdSaldoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SaldoId       int32                  `protobuf:"varint,1,opt,name=saldo_id,json=saldoId,proto3" json:"saldo_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindByIdSaldoRequest) Reset() {
	*x = FindByIdSaldoRequest{}
	mi := &file_saldo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByIdSaldoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByIdSaldoRequest) ProtoMessage() {}

func (x *FindByIdSaldoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByIdSaldoRequest.ProtoReflect.Descriptor instead.
func (*FindByIdSaldoRequest) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{3}
}

func (x *FindByIdSaldoRequest) GetSaldoId() int32 {
	if x != nil {
		return x.SaldoId
	}
	return 0
}

type CreateSaldoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CardNumber    string                 `protobuf:"bytes,1,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	TotalBalance  int32                  `protobuf:"varint,2,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSaldoRequest) Reset() {
	*x = CreateSaldoRequest{}
	mi := &file_saldo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSaldoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSaldoRequest) ProtoMessage() {}

func (x *CreateSaldoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSaldoRequest.ProtoReflect.Descriptor instead.
func (*CreateSaldoRequest) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSaldoRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *CreateSaldoRequest) GetTotalBalance() int32 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

type UpdateSaldoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SaldoId       int32                  `protobuf:"varint,1,opt,name=saldo_id,json=saldoId,proto3" json:"saldo_id,omitempty"`
	CardNumber    string                 `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	TotalBalance  int32                  `protobuf:"varint,3,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSaldoRequest) Reset() {
	*x = UpdateSaldoRequest{}
	mi := &file_saldo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSaldoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSaldoRequest) ProtoMessage() {}

func (x *UpdateSaldoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSaldoRequest.ProtoReflect.Descriptor instead.
func (*UpdateSaldoRequest) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSaldoRequest) GetSaldoId() int32 {
	if x != nil {
		return x.SaldoId
	}
	return 0
}

func (x *UpdateSaldoRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *UpdateSaldoRequest) GetTotalBalance() int32 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

type SaldoResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SaldoId        int32                  `protobuf:"varint,1,opt,name=saldo_id,json=saldoId,proto3" json:"saldo_id,omitempty"`
	CardNumber     string                 `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	TotalBalance   int32                  `protobuf:"varint,3,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	WithdrawTime   string                 `protobuf:"bytes,4,opt,name=withdraw_time,json=withdrawTime,proto3" json:"withdraw_time,omitempty"`
	WithdrawAmount int32                  `protobuf:"varint,5,opt,name=withdraw_amount,json=withdrawAmount,proto3" json:"withdraw_amount,omitempty"`
	CreatedAt      string                 `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      string                 `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SaldoResponse) Reset() {
	*x = SaldoResponse{}
	mi := &file_saldo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaldoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaldoResponse) ProtoMessage() {}

func (x *SaldoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaldoResponse.ProtoReflect.Descriptor instead.
func (*SaldoResponse) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{6}
}

func (x *SaldoResponse) GetSaldoId() int32 {
	if x != nil {
		return x.SaldoId
	}
	return 0
}

func (x *SaldoResponse) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *SaldoResponse) GetTotalBalance() int32 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

func (x *SaldoResponse) GetWithdrawTime() string {
	if x != nil {
		return x.WithdrawTime
	}
	return ""
}

func (x *SaldoResponse) GetWithdrawAmount() int32 {
	if x != nil {
		return x.WithdrawAmount
	}
	return 0
}

func (x *SaldoResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SaldoResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type SaldoResponseDeleteAt struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SaldoId        int32                  `protobuf:"varint,1,opt,name=saldo_id,json=saldoId,proto3" json:"saldo_id,omitempty"`
	CardNumber     string                 `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	TotalBalance   int32                  `protobuf:"varint,3,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	WithdrawTime   string                 `protobuf:"bytes,4,opt,name=withdraw_time,json=withdrawTime,proto3" json:"withdraw_time,omitempty"`
	WithdrawAmount int32                  `protobuf:"varint,5,opt,name=withdraw_amount,json=withdrawAmount,proto3" json:"withdraw_amount,omitempty"`
	CreatedAt      string                 `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      string                 `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt      string                 `protobuf:"bytes,8,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SaldoResponseDeleteAt) Reset() {
	*x = SaldoResponseDeleteAt{}
	mi := &file_saldo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaldoResponseDeleteAt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaldoResponseDeleteAt) ProtoMessage() {}

func (x *SaldoResponseDeleteAt) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaldoResponseDeleteAt.ProtoReflect.Descriptor instead.
func (*SaldoResponseDeleteAt) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{7}
}

func (x *SaldoResponseDeleteAt) GetSaldoId() int32 {
	if x != nil {
		return x.SaldoId
	}
	return 0
}

func (x *SaldoResponseDeleteAt) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *SaldoResponseDeleteAt) GetTotalBalance() int32 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

func (x *SaldoResponseDeleteAt) GetWithdrawTime() string {
	if x != nil {
		return x.WithdrawTime
	}
	return ""
}

func (x *SaldoResponseDeleteAt) GetWithdrawAmount() int32 {
	if x != nil {
		return x.WithdrawAmount
	}
	return 0
}

func (x *SaldoResponseDeleteAt) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SaldoResponseDeleteAt) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SaldoResponseDeleteAt) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type SaldoMonthTotalBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Month         string                 `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	Year          string                 `protobuf:"bytes,2,opt,name=year,proto3" json:"year,omitempty"`
	TotalBalance  int32                  `protobuf:"varint,3,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaldoMonthTotalBalanceResponse) Reset() {
	*x = SaldoMonthTotalBalanceResponse{}
	mi := &file_saldo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaldoMonthTotalBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaldoMonthTotalBalanceResponse) ProtoMessage() {}

func (x *SaldoMonthTotalBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaldoMonthTotalBalanceResponse.ProtoReflect.Descriptor instead.
func (*SaldoMonthTotalBalanceResponse) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{8}
}

func (x *SaldoMonthTotalBalanceResponse) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *SaldoMonthTotalBalanceResponse) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *SaldoMonthTotalBalanceResponse) GetTotalBalance() int32 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

type SaldoYearTotalBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          string                 `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	TotalBalance  int32                  `protobuf:"varint,2,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaldoYearTotalBalanceResponse) Reset() {
	*x = SaldoYearTotalBalanceResponse{}
	mi := &file_saldo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaldoYearTotalBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaldoYearTotalBalanceResponse) ProtoMessage() {}

func (x *SaldoYearTotalBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaldoYearTotalBalanceResponse.ProtoReflect.Descriptor instead.
func (*SaldoYearTotalBalanceResponse) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{9}
}

func (x *SaldoYearTotalBalanceResponse) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *SaldoYearTotalBalanceResponse) GetTotalBalance() int32 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

type SaldoMonthBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Month         string                 `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	TotalBalance  int32                  `protobuf:"varint,2,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaldoMonthBalanceResponse) Reset() {
	*x = SaldoMonthBalanceResponse{}
	mi := &file_saldo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaldoMonthBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaldoMonthBalanceResponse) ProtoMessage() {}

func (x *SaldoMonthBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaldoMonthBalanceResponse.ProtoReflect.Descriptor instead.
func (*SaldoMonthBalanceResponse) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{10}
}

func (x *SaldoMonthBalanceResponse) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *SaldoMonthBalanceResponse) GetTotalBalance() int32 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

type SaldoYearBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          string                 `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	TotalBalance  int32                  `protobuf:"varint,2,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaldoYearBalanceResponse) Reset() {
	*x = SaldoYearBalanceResponse{}
	mi := &file_saldo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaldoYearBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaldoYearBalanceResponse) ProtoMessage() {}

func (x *SaldoYearBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaldoYearBalanceResponse.ProtoReflect.Descriptor instead.
func (*SaldoYearBalanceResponse) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{11}
}

func (x *SaldoYearBalanceResponse) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *SaldoYearBalanceResponse) GetTotalBalance() int32 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

type ApiResponseSaldo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *SaldoResponse         `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseSaldo) Reset() {
	*x = ApiResponseSaldo{}
	mi := &file_saldo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseSaldo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseSaldo) ProtoMessage() {}

func (x *ApiResponseSaldo) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseSaldo.ProtoReflect.Descriptor instead.
func (*ApiResponseSaldo) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{12}
}

func (x *ApiResponseSaldo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseSaldo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseSaldo) GetData() *SaldoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponsesSaldo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*SaldoResponse       `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponsesSaldo) Reset() {
	*x = ApiResponsesSaldo{}
	mi := &file_saldo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponsesSaldo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponsesSaldo) ProtoMessage() {}

func (x *ApiResponsesSaldo) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponsesSaldo.ProtoReflect.Descriptor instead.
func (*ApiResponsesSaldo) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{13}
}

func (x *ApiResponsesSaldo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponsesSaldo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponsesSaldo) GetData() []*SaldoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponseSaldoDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseSaldoDelete) Reset() {
	*x = ApiResponseSaldoDelete{}
	mi := &file_saldo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseSaldoDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseSaldoDelete) ProtoMessage() {}

func (x *ApiResponseSaldoDelete) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseSaldoDelete.ProtoReflect.Descriptor instead.
func (*ApiResponseSaldoDelete) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{14}
}

func (x *ApiResponseSaldoDelete) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseSaldoDelete) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ApiResponseSaldoAll struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseSaldoAll) Reset() {
	*x = ApiResponseSaldoAll{}
	mi := &file_saldo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseSaldoAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseSaldoAll) ProtoMessage() {}

func (x *ApiResponseSaldoAll) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseSaldoAll.ProtoReflect.Descriptor instead.
func (*ApiResponseSaldoAll) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{15}
}

func (x *ApiResponseSaldoAll) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseSaldoAll) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ApiResponseMonthTotalSaldo struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Status        string                            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*SaldoMonthTotalBalanceResponse `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseMonthTotalSaldo) Reset() {
	*x = ApiResponseMonthTotalSaldo{}
	mi := &file_saldo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseMonthTotalSaldo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseMonthTotalSaldo) ProtoMessage() {}

func (x *ApiResponseMonthTotalSaldo) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseMonthTotalSaldo.ProtoReflect.Descriptor instead.
func (*ApiResponseMonthTotalSaldo) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{16}
}

func (x *ApiResponseMonthTotalSaldo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseMonthTotalSaldo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseMonthTotalSaldo) GetData() []*SaldoMonthTotalBalanceResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponseYearTotalSaldo struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Status        string                           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*SaldoYearTotalBalanceResponse `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseYearTotalSaldo) Reset() {
	*x = ApiResponseYearTotalSaldo{}
	mi := &file_saldo_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseYearTotalSaldo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseYearTotalSaldo) ProtoMessage() {}

func (x *ApiResponseYearTotalSaldo) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseYearTotalSaldo.ProtoReflect.Descriptor instead.
func (*ApiResponseYearTotalSaldo) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{17}
}

func (x *ApiResponseYearTotalSaldo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseYearTotalSaldo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseYearTotalSaldo) GetData() []*SaldoYearTotalBalanceResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponseMonthSaldoBalances struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Status        string                       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*SaldoMonthBalanceResponse `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseMonthSaldoBalances) Reset() {
	*x = ApiResponseMonthSaldoBalances{}
	mi := &file_saldo_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseMonthSaldoBalances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseMonthSaldoBalances) ProtoMessage() {}

func (x *ApiResponseMonthSaldoBalances) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseMonthSaldoBalances.ProtoReflect.Descriptor instead.
func (*ApiResponseMonthSaldoBalances) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{18}
}

func (x *ApiResponseMonthSaldoBalances) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseMonthSaldoBalances) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseMonthSaldoBalances) GetData() []*SaldoMonthBalanceResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponseYearSaldoBalances struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Status        string                      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*SaldoYearBalanceResponse `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseYearSaldoBalances) Reset() {
	*x = ApiResponseYearSaldoBalances{}
	mi := &file_saldo_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseYearSaldoBalances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseYearSaldoBalances) ProtoMessage() {}

func (x *ApiResponseYearSaldoBalances) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseYearSaldoBalances.ProtoReflect.Descriptor instead.
func (*ApiResponseYearSaldoBalances) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{19}
}

func (x *ApiResponseYearSaldoBalances) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseYearSaldoBalances) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseYearSaldoBalances) GetData() []*SaldoYearBalanceResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponsePaginationSaldo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*SaldoResponse       `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Pagination    *PaginationMeta        `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponsePaginationSaldo) Reset() {
	*x = ApiResponsePaginationSaldo{}
	mi := &file_saldo_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponsePaginationSaldo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponsePaginationSaldo) ProtoMessage() {}

func (x *ApiResponsePaginationSaldo) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponsePaginationSaldo.ProtoReflect.Descriptor instead.
func (*ApiResponsePaginationSaldo) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{20}
}

func (x *ApiResponsePaginationSaldo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponsePaginationSaldo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponsePaginationSaldo) GetData() []*SaldoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiResponsePaginationSaldo) GetPagination() *PaginationMeta {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ApiResponsePaginationSaldoDeleteAt struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Status        string                   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*SaldoResponseDeleteAt `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Pagination    *PaginationMeta          `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponsePaginationSaldoDeleteAt) Reset() {
	*x = ApiResponsePaginationSaldoDeleteAt{}
	mi := &file_saldo_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponsePaginationSaldoDeleteAt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponsePaginationSaldoDeleteAt) ProtoMessage() {}

func (x *ApiResponsePaginationSaldoDeleteAt) ProtoReflect() protoreflect.Message {
	mi := &file_saldo_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponsePaginationSaldoDeleteAt.ProtoReflect.Descriptor instead.
func (*ApiResponsePaginationSaldoDeleteAt) Descriptor() ([]byte, []int) {
	return file_saldo_proto_rawDescGZIP(), []int{21}
}

func (x *ApiResponsePaginationSaldoDeleteAt) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponsePaginationSaldoDeleteAt) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponsePaginationSaldoDeleteAt) GetData() []*SaldoResponseDeleteAt {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiResponsePaginationSaldoDeleteAt) GetPagination() *PaginationMeta {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_saldo_proto protoreflect.FileDescriptor

var file_saldo_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c,
	0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x48, 0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x6c, 0x79, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x22,
	0x25, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x53, 0x61, 0x6c,
	0x64, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22, 0x31, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79,
	0x49, 0x64, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x61, 0x6c, 0x64, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x61, 0x6c, 0x64, 0x6f, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x75, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x61, 0x6c, 0x64, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x61, 0x6c, 0x64, 0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72,
	0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xfc, 0x01, 0x0a,
	0x0d, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x61, 0x6c, 0x64, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x61, 0x6c, 0x64, 0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa3, 0x02, 0x0a, 0x15,
	0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x61, 0x6c, 0x64, 0x6f, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x61, 0x6c, 0x64, 0x6f, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x6f, 0x0a, 0x1e, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x22, 0x58, 0x0a, 0x1d, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x59, 0x65, 0x61, 0x72, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x56, 0x0a, 0x19,
	0x53, 0x61, 0x6c, 0x64, 0x6f, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0x53, 0x0a, 0x18, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x59, 0x65, 0x61,
	0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x6b, 0x0a, 0x10, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a, 0x11, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x16, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x47, 0x0a, 0x13, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x61, 0x6c, 0x64, 0x6f, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x1a, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61,
	0x6c, 0x64, 0x6f, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x84, 0x01, 0x0a, 0x19, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x64, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x59, 0x65, 0x61, 0x72, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x84, 0x01, 0x0a, 0x1d, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x61,
	0x6c, 0x64, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x82, 0x01, 0x0a, 0x1c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x59, 0x65, 0x61, 0x72, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x59, 0x65, 0x61, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa9, 0x01, 0x0a, 0x1a, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x61, 0x6c, 0x64, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x22, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x64, 0x6f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61,
	0x6c, 0x64, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xd3, 0x09,
	0x0a, 0x0c, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49,
	0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x12, 0x17,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x53, 0x61, 0x6c, 0x64, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x49, 0x64, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x1c,
	0x46, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x61, 0x6c, 0x64, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x70,
	0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x53, 0x61, 0x6c,
	0x64, 0x6f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x1e,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x22, 0x00,
	0x12, 0x51, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x53, 0x61, 0x6c,
	0x64, 0x6f, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x64,
	0x6f, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x6c, 0x79, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x53,
	0x61, 0x6c, 0x64, 0x6f, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x17, 0x46, 0x69, 0x6e,
	0x64, 0x59, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x59, 0x65,
	0x61, 0x72, 0x6c, 0x79, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x53, 0x61,
	0x6c, 0x64, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a,
	0x10, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72,
	0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x61, 0x6c, 0x64, 0x6f, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x6c, 0x6c, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x54, 0x72, 0x61, 0x73, 0x68, 0x65, 0x64, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61,
	0x6c, 0x64, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x12, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x12, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x54,
	0x72, 0x61, 0x73, 0x68, 0x65, 0x64, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x12, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x12, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x53, 0x61, 0x6c, 0x64, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x50, 0x65,
	0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x49, 0x64, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x61, 0x6c,
	0x64, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f,
	0x41, 0x6c, 0x6c, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x6c, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x61, 0x6c, 0x64, 0x6f, 0x41, 0x6c,
	0x6c, 0x22, 0x00, 0x42, 0x2b, 0x5a, 0x29, 0x4d, 0x61, 0x6d, 0x61, 0x6e, 0x67, 0x52, 0x75, 0x73,
	0x74, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_saldo_proto_rawDescOnce sync.Once
	file_saldo_proto_rawDescData = file_saldo_proto_rawDesc
)

func file_saldo_proto_rawDescGZIP() []byte {
	file_saldo_proto_rawDescOnce.Do(func() {
		file_saldo_proto_rawDescData = protoimpl.X.CompressGZIP(file_saldo_proto_rawDescData)
	})
	return file_saldo_proto_rawDescData
}

var file_saldo_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_saldo_proto_goTypes = []any{
	(*FindAllSaldoRequest)(nil),                // 0: pb.FindAllSaldoRequest
	(*FindMonthlySaldoTotalBalance)(nil),       // 1: pb.FindMonthlySaldoTotalBalance
	(*FindYearlySaldo)(nil),                    // 2: pb.FindYearlySaldo
	(*FindByIdSaldoRequest)(nil),               // 3: pb.FindByIdSaldoRequest
	(*CreateSaldoRequest)(nil),                 // 4: pb.CreateSaldoRequest
	(*UpdateSaldoRequest)(nil),                 // 5: pb.UpdateSaldoRequest
	(*SaldoResponse)(nil),                      // 6: pb.SaldoResponse
	(*SaldoResponseDeleteAt)(nil),              // 7: pb.SaldoResponseDeleteAt
	(*SaldoMonthTotalBalanceResponse)(nil),     // 8: pb.SaldoMonthTotalBalanceResponse
	(*SaldoYearTotalBalanceResponse)(nil),      // 9: pb.SaldoYearTotalBalanceResponse
	(*SaldoMonthBalanceResponse)(nil),          // 10: pb.SaldoMonthBalanceResponse
	(*SaldoYearBalanceResponse)(nil),           // 11: pb.SaldoYearBalanceResponse
	(*ApiResponseSaldo)(nil),                   // 12: pb.ApiResponseSaldo
	(*ApiResponsesSaldo)(nil),                  // 13: pb.ApiResponsesSaldo
	(*ApiResponseSaldoDelete)(nil),             // 14: pb.ApiResponseSaldoDelete
	(*ApiResponseSaldoAll)(nil),                // 15: pb.ApiResponseSaldoAll
	(*ApiResponseMonthTotalSaldo)(nil),         // 16: pb.ApiResponseMonthTotalSaldo
	(*ApiResponseYearTotalSaldo)(nil),          // 17: pb.ApiResponseYearTotalSaldo
	(*ApiResponseMonthSaldoBalances)(nil),      // 18: pb.ApiResponseMonthSaldoBalances
	(*ApiResponseYearSaldoBalances)(nil),       // 19: pb.ApiResponseYearSaldoBalances
	(*ApiResponsePaginationSaldo)(nil),         // 20: pb.ApiResponsePaginationSaldo
	(*ApiResponsePaginationSaldoDeleteAt)(nil), // 21: pb.ApiResponsePaginationSaldoDeleteAt
	(*PaginationMeta)(nil),                     // 22: pb.PaginationMeta
	(*FindByCardNumberRequest)(nil),            // 23: pb.FindByCardNumberRequest
	(*emptypb.Empty)(nil),                      // 24: google.protobuf.Empty
}
var file_saldo_proto_depIdxs = []int32{
	6,  // 0: pb.ApiResponseSaldo.data:type_name -> pb.SaldoResponse
	6,  // 1: pb.ApiResponsesSaldo.data:type_name -> pb.SaldoResponse
	8,  // 2: pb.ApiResponseMonthTotalSaldo.data:type_name -> pb.SaldoMonthTotalBalanceResponse
	9,  // 3: pb.ApiResponseYearTotalSaldo.data:type_name -> pb.SaldoYearTotalBalanceResponse
	10, // 4: pb.ApiResponseMonthSaldoBalances.data:type_name -> pb.SaldoMonthBalanceResponse
	11, // 5: pb.ApiResponseYearSaldoBalances.data:type_name -> pb.SaldoYearBalanceResponse
	6,  // 6: pb.ApiResponsePaginationSaldo.data:type_name -> pb.SaldoResponse
	22, // 7: pb.ApiResponsePaginationSaldo.pagination:type_name -> pb.PaginationMeta
	7,  // 8: pb.ApiResponsePaginationSaldoDeleteAt.data:type_name -> pb.SaldoResponseDeleteAt
	22, // 9: pb.ApiResponsePaginationSaldoDeleteAt.pagination:type_name -> pb.PaginationMeta
	0,  // 10: pb.SaldoService.FindAllSaldo:input_type -> pb.FindAllSaldoRequest
	3,  // 11: pb.SaldoService.FindByIdSaldo:input_type -> pb.FindByIdSaldoRequest
	1,  // 12: pb.SaldoService.FindMonthlyTotalSaldoBalance:input_type -> pb.FindMonthlySaldoTotalBalance
	2,  // 13: pb.SaldoService.FindYearTotalSaldoBalance:input_type -> pb.FindYearlySaldo
	2,  // 14: pb.SaldoService.FindMonthlySaldoBalances:input_type -> pb.FindYearlySaldo
	2,  // 15: pb.SaldoService.FindYearlySaldoBalances:input_type -> pb.FindYearlySaldo
	23, // 16: pb.SaldoService.FindByCardNumber:input_type -> pb.FindByCardNumberRequest
	0,  // 17: pb.SaldoService.FindByActive:input_type -> pb.FindAllSaldoRequest
	0,  // 18: pb.SaldoService.FindByTrashed:input_type -> pb.FindAllSaldoRequest
	4,  // 19: pb.SaldoService.CreateSaldo:input_type -> pb.CreateSaldoRequest
	5,  // 20: pb.SaldoService.UpdateSaldo:input_type -> pb.UpdateSaldoRequest
	3,  // 21: pb.SaldoService.TrashedSaldo:input_type -> pb.FindByIdSaldoRequest
	3,  // 22: pb.SaldoService.RestoreSaldo:input_type -> pb.FindByIdSaldoRequest
	3,  // 23: pb.SaldoService.DeleteSaldoPermanent:input_type -> pb.FindByIdSaldoRequest
	24, // 24: pb.SaldoService.RestoreAllSaldo:input_type -> google.protobuf.Empty
	24, // 25: pb.SaldoService.DeleteAllSaldoPermanent:input_type -> google.protobuf.Empty
	20, // 26: pb.SaldoService.FindAllSaldo:output_type -> pb.ApiResponsePaginationSaldo
	12, // 27: pb.SaldoService.FindByIdSaldo:output_type -> pb.ApiResponseSaldo
	16, // 28: pb.SaldoService.FindMonthlyTotalSaldoBalance:output_type -> pb.ApiResponseMonthTotalSaldo
	17, // 29: pb.SaldoService.FindYearTotalSaldoBalance:output_type -> pb.ApiResponseYearTotalSaldo
	18, // 30: pb.SaldoService.FindMonthlySaldoBalances:output_type -> pb.ApiResponseMonthSaldoBalances
	19, // 31: pb.SaldoService.FindYearlySaldoBalances:output_type -> pb.ApiResponseYearSaldoBalances
	12, // 32: pb.SaldoService.FindByCardNumber:output_type -> pb.ApiResponseSaldo
	21, // 33: pb.SaldoService.FindByActive:output_type -> pb.ApiResponsePaginationSaldoDeleteAt
	21, // 34: pb.SaldoService.FindByTrashed:output_type -> pb.ApiResponsePaginationSaldoDeleteAt
	12, // 35: pb.SaldoService.CreateSaldo:output_type -> pb.ApiResponseSaldo
	12, // 36: pb.SaldoService.UpdateSaldo:output_type -> pb.ApiResponseSaldo
	12, // 37: pb.SaldoService.TrashedSaldo:output_type -> pb.ApiResponseSaldo
	12, // 38: pb.SaldoService.RestoreSaldo:output_type -> pb.ApiResponseSaldo
	14, // 39: pb.SaldoService.DeleteSaldoPermanent:output_type -> pb.ApiResponseSaldoDelete
	15, // 40: pb.SaldoService.RestoreAllSaldo:output_type -> pb.ApiResponseSaldoAll
	15, // 41: pb.SaldoService.DeleteAllSaldoPermanent:output_type -> pb.ApiResponseSaldoAll
	26, // [26:42] is the sub-list for method output_type
	10, // [10:26] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_saldo_proto_init() }
func file_saldo_proto_init() {
	if File_saldo_proto != nil {
		return
	}
	file_api_proto_init()
	file_card_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_saldo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_saldo_proto_goTypes,
		DependencyIndexes: file_saldo_proto_depIdxs,
		MessageInfos:      file_saldo_proto_msgTypes,
	}.Build()
	File_saldo_proto = out.File
	file_saldo_proto_rawDesc = nil
	file_saldo_proto_goTypes = nil
	file_saldo_proto_depIdxs = nil
}
