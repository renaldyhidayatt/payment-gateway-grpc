// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: topup.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FindAllTopupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Search        string                 `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllTopupRequest) Reset() {
	*x = FindAllTopupRequest{}
	mi := &file_topup_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllTopupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllTopupRequest) ProtoMessage() {}

func (x *FindAllTopupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_topup_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllTopupRequest.ProtoReflect.Descriptor instead.
func (*FindAllTopupRequest) Descriptor() ([]byte, []int) {
	return file_topup_proto_rawDescGZIP(), []int{0}
}

func (x *FindAllTopupRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindAllTopupRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindAllTopupRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type FindByIdTopupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopupId       int32                  `protobuf:"varint,1,opt,name=topup_id,json=topupId,proto3" json:"topup_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindByIdTopupRequest) Reset() {
	*x = FindByIdTopupRequest{}
	mi := &file_topup_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByIdTopupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByIdTopupRequest) ProtoMessage() {}

func (x *FindByIdTopupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_topup_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByIdTopupRequest.ProtoReflect.Descriptor instead.
func (*FindByIdTopupRequest) Descriptor() ([]byte, []int) {
	return file_topup_proto_rawDescGZIP(), []int{1}
}

func (x *FindByIdTopupRequest) GetTopupId() int32 {
	if x != nil {
		return x.TopupId
	}
	return 0
}

type FindByCardNumberTopupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CardNumber    string                 `protobuf:"bytes,1,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindByCardNumberTopupRequest) Reset() {
	*x = FindByCardNumberTopupRequest{}
	mi := &file_topup_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByCardNumberTopupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByCardNumberTopupRequest) ProtoMessage() {}

func (x *FindByCardNumberTopupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_topup_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByCardNumberTopupRequest.ProtoReflect.Descriptor instead.
func (*FindByCardNumberTopupRequest) Descriptor() ([]byte, []int) {
	return file_topup_proto_rawDescGZIP(), []int{2}
}

func (x *FindByCardNumberTopupRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

type CreateTopupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CardNumber    string                 `protobuf:"bytes,1,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	TopupNo       string                 `protobuf:"bytes,2,opt,name=topup_no,json=topupNo,proto3" json:"topup_no,omitempty"`
	TopupAmount   int32                  `protobuf:"varint,3,opt,name=topup_amount,json=topupAmount,proto3" json:"topup_amount,omitempty"`
	TopupMethod   string                 `protobuf:"bytes,4,opt,name=topup_method,json=topupMethod,proto3" json:"topup_method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTopupRequest) Reset() {
	*x = CreateTopupRequest{}
	mi := &file_topup_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopupRequest) ProtoMessage() {}

func (x *CreateTopupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_topup_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopupRequest.ProtoReflect.Descriptor instead.
func (*CreateTopupRequest) Descriptor() ([]byte, []int) {
	return file_topup_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTopupRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *CreateTopupRequest) GetTopupNo() string {
	if x != nil {
		return x.TopupNo
	}
	return ""
}

func (x *CreateTopupRequest) GetTopupAmount() int32 {
	if x != nil {
		return x.TopupAmount
	}
	return 0
}

func (x *CreateTopupRequest) GetTopupMethod() string {
	if x != nil {
		return x.TopupMethod
	}
	return ""
}

type UpdateTopupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopupId       int32                  `protobuf:"varint,1,opt,name=topup_id,json=topupId,proto3" json:"topup_id,omitempty"`
	CardNumber    string                 `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	TopupAmount   int32                  `protobuf:"varint,3,opt,name=topup_amount,json=topupAmount,proto3" json:"topup_amount,omitempty"`
	TopupMethod   string                 `protobuf:"bytes,4,opt,name=topup_method,json=topupMethod,proto3" json:"topup_method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTopupRequest) Reset() {
	*x = UpdateTopupRequest{}
	mi := &file_topup_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTopupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopupRequest) ProtoMessage() {}

func (x *UpdateTopupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_topup_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopupRequest.ProtoReflect.Descriptor instead.
func (*UpdateTopupRequest) Descriptor() ([]byte, []int) {
	return file_topup_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTopupRequest) GetTopupId() int32 {
	if x != nil {
		return x.TopupId
	}
	return 0
}

func (x *UpdateTopupRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *UpdateTopupRequest) GetTopupAmount() int32 {
	if x != nil {
		return x.TopupAmount
	}
	return 0
}

func (x *UpdateTopupRequest) GetTopupMethod() string {
	if x != nil {
		return x.TopupMethod
	}
	return ""
}

type TopupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CardNumber    string                 `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	TopupNo       string                 `protobuf:"bytes,3,opt,name=topup_no,json=topupNo,proto3" json:"topup_no,omitempty"`
	TopupAmount   int32                  `protobuf:"varint,4,opt,name=topup_amount,json=topupAmount,proto3" json:"topup_amount,omitempty"`
	TopupMethod   string                 `protobuf:"bytes,5,opt,name=topup_method,json=topupMethod,proto3" json:"topup_method,omitempty"`
	TopupTime     string                 `protobuf:"bytes,6,opt,name=topup_time,json=topupTime,proto3" json:"topup_time,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopupResponse) Reset() {
	*x = TopupResponse{}
	mi := &file_topup_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopupResponse) ProtoMessage() {}

func (x *TopupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_topup_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopupResponse.ProtoReflect.Descriptor instead.
func (*TopupResponse) Descriptor() ([]byte, []int) {
	return file_topup_proto_rawDescGZIP(), []int{5}
}

func (x *TopupResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TopupResponse) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *TopupResponse) GetTopupNo() string {
	if x != nil {
		return x.TopupNo
	}
	return ""
}

func (x *TopupResponse) GetTopupAmount() int32 {
	if x != nil {
		return x.TopupAmount
	}
	return 0
}

func (x *TopupResponse) GetTopupMethod() string {
	if x != nil {
		return x.TopupMethod
	}
	return ""
}

func (x *TopupResponse) GetTopupTime() string {
	if x != nil {
		return x.TopupTime
	}
	return ""
}

func (x *TopupResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TopupResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type TopupResponseDeleteAt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CardNumber    string                 `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	TopupNo       string                 `protobuf:"bytes,3,opt,name=topup_no,json=topupNo,proto3" json:"topup_no,omitempty"`
	TopupAmount   int32                  `protobuf:"varint,4,opt,name=topup_amount,json=topupAmount,proto3" json:"topup_amount,omitempty"`
	TopupMethod   string                 `protobuf:"bytes,5,opt,name=topup_method,json=topupMethod,proto3" json:"topup_method,omitempty"`
	TopupTime     string                 `protobuf:"bytes,6,opt,name=topup_time,json=topupTime,proto3" json:"topup_time,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt     string                 `protobuf:"bytes,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopupResponseDeleteAt) Reset() {
	*x = TopupResponseDeleteAt{}
	mi := &file_topup_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopupResponseDeleteAt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopupResponseDeleteAt) ProtoMessage() {}

func (x *TopupResponseDeleteAt) ProtoReflect() protoreflect.Message {
	mi := &file_topup_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopupResponseDeleteAt.ProtoReflect.Descriptor instead.
func (*TopupResponseDeleteAt) Descriptor() ([]byte, []int) {
	return file_topup_proto_rawDescGZIP(), []int{6}
}

func (x *TopupResponseDeleteAt) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TopupResponseDeleteAt) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *TopupResponseDeleteAt) GetTopupNo() string {
	if x != nil {
		return x.TopupNo
	}
	return ""
}

func (x *TopupResponseDeleteAt) GetTopupAmount() int32 {
	if x != nil {
		return x.TopupAmount
	}
	return 0
}

func (x *TopupResponseDeleteAt) GetTopupMethod() string {
	if x != nil {
		return x.TopupMethod
	}
	return ""
}

func (x *TopupResponseDeleteAt) GetTopupTime() string {
	if x != nil {
		return x.TopupTime
	}
	return ""
}

func (x *TopupResponseDeleteAt) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TopupResponseDeleteAt) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *TopupResponseDeleteAt) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type ApiResponseTopup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *TopupResponse         `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseTopup) Reset() {
	*x = ApiResponseTopup{}
	mi := &file_topup_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseTopup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseTopup) ProtoMessage() {}

func (x *ApiResponseTopup) ProtoReflect() protoreflect.Message {
	mi := &file_topup_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseTopup.ProtoReflect.Descriptor instead.
func (*ApiResponseTopup) Descriptor() ([]byte, []int) {
	return file_topup_proto_rawDescGZIP(), []int{7}
}

func (x *ApiResponseTopup) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseTopup) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseTopup) GetData() *TopupResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponsesTopup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*TopupResponse       `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponsesTopup) Reset() {
	*x = ApiResponsesTopup{}
	mi := &file_topup_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponsesTopup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponsesTopup) ProtoMessage() {}

func (x *ApiResponsesTopup) ProtoReflect() protoreflect.Message {
	mi := &file_topup_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponsesTopup.ProtoReflect.Descriptor instead.
func (*ApiResponsesTopup) Descriptor() ([]byte, []int) {
	return file_topup_proto_rawDescGZIP(), []int{8}
}

func (x *ApiResponsesTopup) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponsesTopup) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponsesTopup) GetData() []*TopupResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponsePaginationTopup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*TopupResponse       `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Pagination    *PaginationMeta        `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponsePaginationTopup) Reset() {
	*x = ApiResponsePaginationTopup{}
	mi := &file_topup_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponsePaginationTopup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponsePaginationTopup) ProtoMessage() {}

func (x *ApiResponsePaginationTopup) ProtoReflect() protoreflect.Message {
	mi := &file_topup_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponsePaginationTopup.ProtoReflect.Descriptor instead.
func (*ApiResponsePaginationTopup) Descriptor() ([]byte, []int) {
	return file_topup_proto_rawDescGZIP(), []int{9}
}

func (x *ApiResponsePaginationTopup) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponsePaginationTopup) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponsePaginationTopup) GetData() []*TopupResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiResponsePaginationTopup) GetPagination() *PaginationMeta {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ApiResponsePaginationTopupDeleteAt struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Status        string                   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*TopupResponseDeleteAt `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Pagination    *PaginationMeta          `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponsePaginationTopupDeleteAt) Reset() {
	*x = ApiResponsePaginationTopupDeleteAt{}
	mi := &file_topup_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponsePaginationTopupDeleteAt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponsePaginationTopupDeleteAt) ProtoMessage() {}

func (x *ApiResponsePaginationTopupDeleteAt) ProtoReflect() protoreflect.Message {
	mi := &file_topup_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponsePaginationTopupDeleteAt.ProtoReflect.Descriptor instead.
func (*ApiResponsePaginationTopupDeleteAt) Descriptor() ([]byte, []int) {
	return file_topup_proto_rawDescGZIP(), []int{10}
}

func (x *ApiResponsePaginationTopupDeleteAt) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponsePaginationTopupDeleteAt) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponsePaginationTopupDeleteAt) GetData() []*TopupResponseDeleteAt {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiResponsePaginationTopupDeleteAt) GetPagination() *PaginationMeta {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ApiResponseTopupDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseTopupDelete) Reset() {
	*x = ApiResponseTopupDelete{}
	mi := &file_topup_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseTopupDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseTopupDelete) ProtoMessage() {}

func (x *ApiResponseTopupDelete) ProtoReflect() protoreflect.Message {
	mi := &file_topup_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseTopupDelete.ProtoReflect.Descriptor instead.
func (*ApiResponseTopupDelete) Descriptor() ([]byte, []int) {
	return file_topup_proto_rawDescGZIP(), []int{11}
}

func (x *ApiResponseTopupDelete) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseTopupDelete) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ApiResponseTopupRestore struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseTopupRestore) Reset() {
	*x = ApiResponseTopupRestore{}
	mi := &file_topup_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseTopupRestore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseTopupRestore) ProtoMessage() {}

func (x *ApiResponseTopupRestore) ProtoReflect() protoreflect.Message {
	mi := &file_topup_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseTopupRestore.ProtoReflect.Descriptor instead.
func (*ApiResponseTopupRestore) Descriptor() ([]byte, []int) {
	return file_topup_proto_rawDescGZIP(), []int{12}
}

func (x *ApiResponseTopupRestore) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseTopupRestore) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_topup_proto protoreflect.FileDescriptor

var file_topup_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x13,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x31, 0x0a, 0x14,
	0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x49, 0x64, 0x22,
	0x3f, 0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x96, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x75,
	0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x75,
	0x70, 0x4e, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x75, 0x70,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f,
	0x70, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x6f, 0x70, 0x75, 0x70, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x5f, 0x6e,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x4e, 0x6f,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x75, 0x70,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x75,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xa5, 0x02, 0x0a, 0x15, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x4e, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x70,
	0x75, 0x70, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x6f, 0x70, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6b, 0x0a, 0x10, 0x41,
	0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a, 0x11, 0x41, 0x70, 0x69, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa9, 0x01, 0x0a, 0x1a, 0x41, 0x70, 0x69, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x6f, 0x70, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x22, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x75,
	0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4a,
	0x0a, 0x16, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x70,
	0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x17, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xd4, 0x05, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x75,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x75,
	0x70, 0x12, 0x3f, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x54, 0x6f, 0x70,
	0x75, 0x70, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64,
	0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x70,
	0x75, 0x70, 0x12, 0x4f, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x20, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f,
	0x70, 0x75, 0x70, 0x12, 0x4f, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c,
	0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x74, 0x12, 0x50, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x54, 0x72,
	0x61, 0x73, 0x68, 0x65, 0x64, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x6c, 0x6c, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f,
	0x70, 0x75, 0x70, 0x12, 0x3b, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70,
	0x75, 0x70, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x70, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x70, 0x75, 0x70,
	0x12, 0x3e, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x73, 0x68, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x75, 0x70,
	0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x54, 0x6f,
	0x70, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x70, 0x75, 0x70,
	0x12, 0x3e, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x75, 0x70,
	0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x54, 0x6f,
	0x70, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x70, 0x75, 0x70,
	0x12, 0x4c, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x50,
	0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x2b,
	0x5a, 0x29, 0x4d, 0x61, 0x6d, 0x61, 0x6e, 0x67, 0x52, 0x75, 0x73, 0x74, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_topup_proto_rawDescOnce sync.Once
	file_topup_proto_rawDescData = file_topup_proto_rawDesc
)

func file_topup_proto_rawDescGZIP() []byte {
	file_topup_proto_rawDescOnce.Do(func() {
		file_topup_proto_rawDescData = protoimpl.X.CompressGZIP(file_topup_proto_rawDescData)
	})
	return file_topup_proto_rawDescData
}

var file_topup_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_topup_proto_goTypes = []any{
	(*FindAllTopupRequest)(nil),                // 0: pb.FindAllTopupRequest
	(*FindByIdTopupRequest)(nil),               // 1: pb.FindByIdTopupRequest
	(*FindByCardNumberTopupRequest)(nil),       // 2: pb.FindByCardNumberTopupRequest
	(*CreateTopupRequest)(nil),                 // 3: pb.CreateTopupRequest
	(*UpdateTopupRequest)(nil),                 // 4: pb.UpdateTopupRequest
	(*TopupResponse)(nil),                      // 5: pb.TopupResponse
	(*TopupResponseDeleteAt)(nil),              // 6: pb.TopupResponseDeleteAt
	(*ApiResponseTopup)(nil),                   // 7: pb.ApiResponseTopup
	(*ApiResponsesTopup)(nil),                  // 8: pb.ApiResponsesTopup
	(*ApiResponsePaginationTopup)(nil),         // 9: pb.ApiResponsePaginationTopup
	(*ApiResponsePaginationTopupDeleteAt)(nil), // 10: pb.ApiResponsePaginationTopupDeleteAt
	(*ApiResponseTopupDelete)(nil),             // 11: pb.ApiResponseTopupDelete
	(*ApiResponseTopupRestore)(nil),            // 12: pb.ApiResponseTopupRestore
	(*PaginationMeta)(nil),                     // 13: pb.PaginationMeta
}
var file_topup_proto_depIdxs = []int32{
	5,  // 0: pb.ApiResponseTopup.data:type_name -> pb.TopupResponse
	5,  // 1: pb.ApiResponsesTopup.data:type_name -> pb.TopupResponse
	5,  // 2: pb.ApiResponsePaginationTopup.data:type_name -> pb.TopupResponse
	13, // 3: pb.ApiResponsePaginationTopup.pagination:type_name -> pb.PaginationMeta
	6,  // 4: pb.ApiResponsePaginationTopupDeleteAt.data:type_name -> pb.TopupResponseDeleteAt
	13, // 5: pb.ApiResponsePaginationTopupDeleteAt.pagination:type_name -> pb.PaginationMeta
	0,  // 6: pb.TopupService.FindAllTopup:input_type -> pb.FindAllTopupRequest
	1,  // 7: pb.TopupService.FindByIdTopup:input_type -> pb.FindByIdTopupRequest
	2,  // 8: pb.TopupService.FindByCardNumberTopup:input_type -> pb.FindByCardNumberTopupRequest
	0,  // 9: pb.TopupService.FindByActive:input_type -> pb.FindAllTopupRequest
	0,  // 10: pb.TopupService.FindByTrashed:input_type -> pb.FindAllTopupRequest
	3,  // 11: pb.TopupService.CreateTopup:input_type -> pb.CreateTopupRequest
	4,  // 12: pb.TopupService.UpdateTopup:input_type -> pb.UpdateTopupRequest
	1,  // 13: pb.TopupService.TrashedTopup:input_type -> pb.FindByIdTopupRequest
	1,  // 14: pb.TopupService.RestoreTopup:input_type -> pb.FindByIdTopupRequest
	1,  // 15: pb.TopupService.DeleteTopupPermanent:input_type -> pb.FindByIdTopupRequest
	9,  // 16: pb.TopupService.FindAllTopup:output_type -> pb.ApiResponsePaginationTopup
	7,  // 17: pb.TopupService.FindByIdTopup:output_type -> pb.ApiResponseTopup
	7,  // 18: pb.TopupService.FindByCardNumberTopup:output_type -> pb.ApiResponseTopup
	10, // 19: pb.TopupService.FindByActive:output_type -> pb.ApiResponsePaginationTopupDeleteAt
	10, // 20: pb.TopupService.FindByTrashed:output_type -> pb.ApiResponsePaginationTopupDeleteAt
	7,  // 21: pb.TopupService.CreateTopup:output_type -> pb.ApiResponseTopup
	7,  // 22: pb.TopupService.UpdateTopup:output_type -> pb.ApiResponseTopup
	7,  // 23: pb.TopupService.TrashedTopup:output_type -> pb.ApiResponseTopup
	7,  // 24: pb.TopupService.RestoreTopup:output_type -> pb.ApiResponseTopup
	11, // 25: pb.TopupService.DeleteTopupPermanent:output_type -> pb.ApiResponseTopupDelete
	16, // [16:26] is the sub-list for method output_type
	6,  // [6:16] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_topup_proto_init() }
func file_topup_proto_init() {
	if File_topup_proto != nil {
		return
	}
	file_api_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_topup_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_topup_proto_goTypes,
		DependencyIndexes: file_topup_proto_depIdxs,
		MessageInfos:      file_topup_proto_msgTypes,
	}.Build()
	File_topup_proto = out.File
	file_topup_proto_rawDesc = nil
	file_topup_proto_goTypes = nil
	file_topup_proto_depIdxs = nil
}
