// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"
	"database/sql"
	"time"
)

type Querier interface {
	// Count All Active Users
	CountActiveUsers(ctx context.Context) (int64, error)
	// Count Active Withdraws by Date
	CountActiveWithdrawsByDate(ctx context.Context, withdrawTime time.Time) (int64, error)
	// Count All Topups
	CountAllTopups(ctx context.Context) (int64, error)
	// Count All Transactions
	CountAllTransactions(ctx context.Context) (int64, error)
	// Count All Transfers
	CountAllTransfers(ctx context.Context) (int64, error)
	// Count Topups by Date
	CountTopupsByDate(ctx context.Context, dollar_1 time.Time) (int64, error)
	// Count Transactions by Date
	CountTransactionsByDate(ctx context.Context, dollar_1 time.Time) (int64, error)
	// Count Transfers by Date
	CountTransfersByDate(ctx context.Context, dollar_1 time.Time) (int64, error)
	// Create Card
	CreateCard(ctx context.Context, arg CreateCardParams) (*Card, error)
	// Create Merchant
	CreateMerchant(ctx context.Context, arg CreateMerchantParams) (*Merchant, error)
	// Create Saldo
	CreateSaldo(ctx context.Context, arg CreateSaldoParams) (*Saldo, error)
	// Create Topup
	CreateTopup(ctx context.Context, arg CreateTopupParams) (*Topup, error)
	// Create Transaction
	CreateTransaction(ctx context.Context, arg CreateTransactionParams) (*Transaction, error)
	// Create Transfer
	CreateTransfer(ctx context.Context, arg CreateTransferParams) (*Transfer, error)
	// Create User
	CreateUser(ctx context.Context, arg CreateUserParams) (*User, error)
	// Create Withdraw
	CreateWithdraw(ctx context.Context, arg CreateWithdrawParams) (*Withdraw, error)
	// Delete Card Permanently
	DeleteCardPermanently(ctx context.Context, cardID int32) error
	// Delete Merchant Permanently
	DeleteMerchantPermanently(ctx context.Context, merchantID int32) error
	// Delete Saldo Permanently
	DeleteSaldoPermanently(ctx context.Context, saldoID int32) error
	// Delete Topup Permanently
	DeleteTopupPermanently(ctx context.Context, topupID int32) error
	// Delete Transaction Permanently
	DeleteTransactionPermanently(ctx context.Context, transactionID int32) error
	// Delete Transfer Permanently
	DeleteTransferPermanently(ctx context.Context, transferID int32) error
	// Delete User Permanently
	DeleteUserPermanently(ctx context.Context, userID int32) error
	// Delete Withdraw Permanently
	DeleteWithdrawPermanently(ctx context.Context, withdrawID int32) error
	// Get Active Cards
	GetActiveCards(ctx context.Context) ([]*Card, error)
	// Get All Active Merchants
	GetActiveMerchants(ctx context.Context) ([]*Merchant, error)
	// Get All Active Saldos
	GetActiveSaldos(ctx context.Context) ([]*Saldo, error)
	// Get All Active Topups
	GetActiveTopups(ctx context.Context) ([]*Topup, error)
	// Get All Active Transactions
	GetActiveTransactions(ctx context.Context) ([]*Transaction, error)
	// Get All Active Transfers
	GetActiveTransfers(ctx context.Context) ([]*Transfer, error)
	// Get All Active Users
	GetActiveUsers(ctx context.Context) ([]*User, error)
	// Get All Active Withdraws
	GetActiveWithdraws(ctx context.Context) ([]*Withdraw, error)
	// Get Card by Card Number
	GetCardByCardNumber(ctx context.Context, cardNumber string) (*Card, error)
	// Get Card by ID
	GetCardByID(ctx context.Context, cardID int32) (*Card, error)
	// Get a single Card by User ID
	GetCardByUserID(ctx context.Context, userID int32) (*Card, error)
	// Search Cards with Pagination
	GetCards(ctx context.Context, arg GetCardsParams) ([]*Card, error)
	// Get Merchant by API Key
	GetMerchantByApiKey(ctx context.Context, apiKey string) (*Merchant, error)
	// Get Merchant by ID
	GetMerchantByID(ctx context.Context, merchantID int32) (*Merchant, error)
	// Get Merchant by Name
	GetMerchantByName(ctx context.Context, name string) (*Merchant, error)
	// Search Merchants with Pagination
	GetMerchants(ctx context.Context, arg GetMerchantsParams) ([]*Merchant, error)
	// Get Merchants by User ID
	GetMerchantsByUserID(ctx context.Context, userID int32) ([]*Merchant, error)
	// Get Saldo by Card Number
	GetSaldoByCardNumber(ctx context.Context, cardNumber string) (*Saldo, error)
	// Get Saldo by ID
	GetSaldoByID(ctx context.Context, saldoID int32) (*Saldo, error)
	// Search Saldos with Pagination
	GetSaldos(ctx context.Context, arg GetSaldosParams) ([]*Saldo, error)
	// Get Topup by ID
	GetTopupByID(ctx context.Context, topupID int32) (*Topup, error)
	// Search Topups with Pagination
	GetTopups(ctx context.Context, arg GetTopupsParams) ([]*Topup, error)
	// Get Topups by Card Number
	GetTopupsByCardNumber(ctx context.Context, cardNumber string) ([]*Topup, error)
	// Get Transaction by ID
	GetTransactionByID(ctx context.Context, transactionID int32) (*Transaction, error)
	// Search Transactions with Pagination
	GetTransactions(ctx context.Context, arg GetTransactionsParams) ([]*Transaction, error)
	// Get Transactions by Card Number
	GetTransactionsByCardNumber(ctx context.Context, cardNumber string) ([]*Transaction, error)
	// Get Transactions by Merchant ID
	GetTransactionsByMerchantID(ctx context.Context, merchantID int32) ([]*Transaction, error)
	// Get Transfer by ID
	GetTransferByID(ctx context.Context, transferID int32) (*Transfer, error)
	// Search Transfers with Pagination
	GetTransfers(ctx context.Context, arg GetTransfersParams) ([]*Transfer, error)
	// Get Transfers by Card Number (Source or Destination)
	GetTransfersByCardNumber(ctx context.Context, transferFrom string) ([]*Transfer, error)
	// Get Transfers by Destination Card
	GetTransfersByDestinationCard(ctx context.Context, transferTo string) ([]*Transfer, error)
	// Get Transfers by Source Card
	GetTransfersBySourceCard(ctx context.Context, transferFrom string) ([]*Transfer, error)
	// Get Trashed By Card ID
	GetTrashedCardByID(ctx context.Context, cardID int32) (*Card, error)
	// Get Trashed Cards
	GetTrashedCards(ctx context.Context) ([]*Card, error)
	// Get Trashed By Merchant ID
	GetTrashedMerchantByID(ctx context.Context, merchantID int32) (*Merchant, error)
	// Get Trashed Merchants
	GetTrashedMerchants(ctx context.Context) ([]*Merchant, error)
	// Get Trashed By Saldo ID
	GetTrashedSaldoByID(ctx context.Context, saldoID int32) (*Saldo, error)
	// Get Trashed Saldos
	GetTrashedSaldos(ctx context.Context) ([]*Saldo, error)
	// Get Trashed By Topup ID
	GetTrashedTopupByID(ctx context.Context, topupID int32) (*Topup, error)
	// Get Trashed Topups
	GetTrashedTopups(ctx context.Context) ([]*Topup, error)
	// Get Trashed By Transaction ID
	GetTrashedTransactionByID(ctx context.Context, transactionID int32) (*Transaction, error)
	// Get Trashed Transactions
	GetTrashedTransactions(ctx context.Context) ([]*Transaction, error)
	// Get Trashed By Transfer ID
	GetTrashedTransferByID(ctx context.Context, transferID int32) (*Transfer, error)
	// Get Trashed Transfers
	GetTrashedTransfers(ctx context.Context) ([]*Transfer, error)
	// Get Trashed By User ID
	GetTrashedUserByID(ctx context.Context, userID int32) (*User, error)
	// Get Trashed Users
	GetTrashedUsers(ctx context.Context) ([]*User, error)
	// Get Trashed By Withdraw ID
	GetTrashedWithdrawByID(ctx context.Context, withdrawID int32) (*Withdraw, error)
	// Get Trashed Withdraws
	GetTrashedWithdraws(ctx context.Context) ([]*Withdraw, error)
	// Get User by Email
	GetUserByEmail(ctx context.Context, email string) (*User, error)
	// Get User by ID
	GetUserByID(ctx context.Context, userID int32) (*User, error)
	// Get Withdraw by ID
	GetWithdrawByID(ctx context.Context, withdrawID int32) (*Withdraw, error)
	// Restore Trashed Card
	RestoreCard(ctx context.Context, cardID int32) error
	// Restore Trashed Merchant
	RestoreMerchant(ctx context.Context, merchantID int32) error
	// Restore Trashed Saldo
	RestoreSaldo(ctx context.Context, saldoID int32) error
	// Restore Trashed Topup
	RestoreTopup(ctx context.Context, topupID int32) error
	// Restore Trashed Transaction
	RestoreTransaction(ctx context.Context, transactionID int32) error
	// Restore Trashed Transfer
	RestoreTransfer(ctx context.Context, transferID int32) error
	// Restore Trashed User
	RestoreUser(ctx context.Context, userID int32) error
	// Restore Withdraw (Undelete)
	RestoreWithdraw(ctx context.Context, withdrawID int32) error
	// Search Users with Pagination
	SearchUsers(ctx context.Context, arg SearchUsersParams) ([]*User, error)
	// Search Users by Email
	SearchUsersByEmail(ctx context.Context, dollar_1 sql.NullString) ([]*User, error)
	// Search Withdraw by Card Number
	SearchWithdrawByCardNumber(ctx context.Context, dollar_1 sql.NullString) ([]*Withdraw, error)
	// Search Withdraws with Pagination
	SearchWithdraws(ctx context.Context, arg SearchWithdrawsParams) ([]*Withdraw, error)
	// Trash Card
	TrashCard(ctx context.Context, cardID int32) error
	// Trash Merchant
	TrashMerchant(ctx context.Context, merchantID int32) error
	// Trash Saldo
	TrashSaldo(ctx context.Context, saldoID int32) error
	// Trash Topup
	TrashTopup(ctx context.Context, topupID int32) error
	// Trash Transaction
	TrashTransaction(ctx context.Context, transactionID int32) error
	// Trash Transfer
	TrashTransfer(ctx context.Context, transferID int32) error
	// Trash User
	TrashUser(ctx context.Context, userID int32) error
	// Trash Withdraw (Soft Delete)
	TrashWithdraw(ctx context.Context, withdrawID int32) error
	// Update Card
	UpdateCard(ctx context.Context, arg UpdateCardParams) error
	// Update Merchant
	UpdateMerchant(ctx context.Context, arg UpdateMerchantParams) error
	// Update Saldo
	UpdateSaldo(ctx context.Context, arg UpdateSaldoParams) error
	// Update Saldo Balance
	UpdateSaldoBalance(ctx context.Context, arg UpdateSaldoBalanceParams) error
	// Update Saldo Withdraw
	UpdateSaldoWithdraw(ctx context.Context, arg UpdateSaldoWithdrawParams) error
	// Update Topup
	UpdateTopup(ctx context.Context, arg UpdateTopupParams) error
	// Update Topup Amount
	UpdateTopupAmount(ctx context.Context, arg UpdateTopupAmountParams) error
	// Update Transaction
	UpdateTransaction(ctx context.Context, arg UpdateTransactionParams) error
	// Update Transfer
	UpdateTransfer(ctx context.Context, arg UpdateTransferParams) error
	// Update Transfer Amount
	UpdateTransferAmount(ctx context.Context, arg UpdateTransferAmountParams) error
	// Update User
	UpdateUser(ctx context.Context, arg UpdateUserParams) error
	// Update Withdraw
	UpdateWithdraw(ctx context.Context, arg UpdateWithdrawParams) error
}

var _ Querier = (*Queries)(nil)
