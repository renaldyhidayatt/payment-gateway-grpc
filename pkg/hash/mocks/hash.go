// Code generated by MockGen. DO NOT EDIT.
// Source: hash.go
//
// Generated by this command:
//
//	mockgen -source=hash.go -destination=mocks/hash.go
//

// Package mock_hash is a generated GoMock package.
package mock_hash

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockHashPassword is a mock of HashPassword interface.
type MockHashPassword struct {
	ctrl     *gomock.Controller
	recorder *MockHashPasswordMockRecorder
	isgomock struct{}
}

// MockHashPasswordMockRecorder is the mock recorder for MockHashPassword.
type MockHashPasswordMockRecorder struct {
	mock *MockHashPassword
}

// NewMockHashPassword creates a new mock instance.
func NewMockHashPassword(ctrl *gomock.Controller) *MockHashPassword {
	mock := &MockHashPassword{ctrl: ctrl}
	mock.recorder = &MockHashPasswordMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHashPassword) EXPECT() *MockHashPasswordMockRecorder {
	return m.recorder
}

// ComparePassword mocks base method.
func (m *MockHashPassword) ComparePassword(hashPassword, password string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ComparePassword", hashPassword, password)
	ret0, _ := ret[0].(error)
	return ret0
}

// ComparePassword indicates an expected call of ComparePassword.
func (mr *MockHashPasswordMockRecorder) ComparePassword(hashPassword, password any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComparePassword", reflect.TypeOf((*MockHashPassword)(nil).ComparePassword), hashPassword, password)
}

// HashPassword mocks base method.
func (m *MockHashPassword) HashPassword(password string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HashPassword", password)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HashPassword indicates an expected call of HashPassword.
func (mr *MockHashPasswordMockRecorder) HashPassword(password any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HashPassword", reflect.TypeOf((*MockHashPassword)(nil).HashPassword), password)
}
