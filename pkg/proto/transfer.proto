syntax = "proto3";

package pb;

option go_package = 'MamangRust/paymentgatewaygrpc/internal/pb';


import "api.proto";

// request

message FindAllTransferRequest {
    int32 page = 1;
    int32 page_size = 2;
    string search = 3;
}

message FindByIdTransferRequest {
    int32 transfer_id = 1;
}

message FindTransferByTransferFromRequest {
    string transfer_from = 1;
}

message FindTransferByTransferToRequest {
    string transfer_to = 1;
}

message CreateTransferRequest {
    string transfer_from = 1;
    string transfer_to = 2;
    int32 transfer_amount = 3;
}

message UpdateTransferRequest {
    int32 transfer_id = 1;
    string transfer_from = 2;
    string transfer_to = 3;
    int32 transfer_amount = 4;
}

// response

message TransferResponse {
    int32 id = 1;
    string transfer_from = 2;
    string transfer_to = 3;
    int32 transfer_amount = 4;
    string transfer_time = 5;
    string created_at = 6;
    string updated_at = 7;
}

message TransferResponseDeleteAt {
    int32 id = 1;
    string transfer_from = 2;
    string transfer_to = 3;
    int32 transfer_amount = 4;
    string transfer_time = 5;
    string created_at = 6;
    string updated_at = 7;
    string deleted_at = 8;
}

message ApiResponseTransfer {
    string status = 1;
    string message = 2;
    TransferResponse data = 3;
}

message ApiResponseTransfers{
    string status = 1;
    string message = 2;
    repeated TransferResponse data = 3;
}

message ApiResponseTransferDelete {
    string status = 1;
    string message = 2;
}

message ApiResponsePaginationTransfer {
    string status = 1;
    string message = 2;
    repeated TransferResponse data = 3;
    PaginationMeta pagination = 4;
}

message ApiResponsePaginationTransferDeleteAt {
    string status = 1;
    string message = 2;
    repeated TransferResponseDeleteAt data = 3;
    PaginationMeta pagination = 4;
}

service TransferService {
    rpc FindAllTransfer (FindAllTransferRequest) returns (ApiResponsePaginationTransfer);
    rpc FindByIdTransfer (FindByIdTransferRequest) returns (ApiResponseTransfer);
    rpc FindTransferByTransferFrom (FindTransferByTransferFromRequest) returns (ApiResponseTransfers);
    rpc FindTransferByTransferTo (FindTransferByTransferToRequest) returns (ApiResponseTransfers);
    rpc FindByActiveTransfer (FindAllTransferRequest) returns (ApiResponsePaginationTransferDeleteAt);
    rpc FindByTrashedTransfer (FindAllTransferRequest) returns (ApiResponsePaginationTransferDeleteAt);
    rpc CreateTransfer (CreateTransferRequest) returns (ApiResponseTransfer);
    rpc UpdateTransfer (UpdateTransferRequest) returns (ApiResponseTransfer);
    rpc TrashedTransfer (FindByIdTransferRequest) returns (ApiResponseTransfer);
    rpc RestoreTransfer (FindByIdTransferRequest) returns (ApiResponseTransfer);
    rpc DeleteTransferPermanent (FindByIdTransferRequest) returns (ApiResponseTransferDelete);
}
